{"version":3,"sources":["CharactersList/index.js","Initiative/index.js","HitPoints/index.js","Name/index.js","AddCharacter/index.js","Settings/index.js","HitPointsConditionsManager/index.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["confirm","Modal","DragHandle","sortableHandle","MenuOutlined","style","width","cursor","color","SortableItem","sortableElement","props","SortableContainer","sortableContainer","CharacterList","initiatives","state","dispatch","wider","columns","useMemo","fields","dataIndex","className","render","title","name","monster","fontWeight","key","push","hitpoints","tags","display","flexDirection","map","condition","id","DeleteOutlined","onClick","icon","onOk","type","value","onSortEnd","oldIndex","newIndex","newInitiatives","arrayMove","concat","filter","el","height","overflowX","justifyContent","borderRight","overflow","pagination","dataSource","rowKey","rowSelection","onChange","components","body","wrapper","useDragHandle","helperClass","row","restProps","index","findIndex","x","span","size","maxWidth","disabled","length","buttons","Icon","LineOutlined","Keyboard","danger","minWidth","Initiative","gutter","justify","margin","inputInitiative","precision","HitPoints","inputHitpoints","buttonLetters","extraWords","Name","queryString","window","location","search","urlParams","URLSearchParams","players_param","get","players","split","ply","inputName","Step","Steps","steps","AddCharacter","useState","current","setCurrent","item","RollbackOutlined","saveState","states","localStorage","setItem","JSON","stringify","getStates","states_str","getItem","parse","Settings","stateSelected","setstateSelected","setName","setStates","placeholder","target","stateToBeSaved","Date","now","setTimeout","SaveOutlined","toDateString","newStates","buttonsHitpoints","buttonsConditions","add","remove","KeyboardConditions","conditions","hasIt","find","cond","KeyboardHitpoints","isNegative","HitPointsConditionsManager","checked","ini","selected","TabPane","Tabs","reducer","action","character","sort","a","b","parseInt","slice","copy","cloneDeep","Error","App","storedState","initialState","useReducer","activeTab","setTab","useEffect","CharactersList","padding","activeKey","tab","SettingOutlined","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","string_state","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7621a15c.chunk.js","sourcesContent":["import React, {useMemo} from 'react';\r\nimport { Table, Tag, Modal, Row, Col, Button } from 'antd';\r\nimport { sortableContainer, sortableElement, sortableHandle, arrayMove } from 'react-sortable-hoc';\r\n\r\nimport { DeleteOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst DragHandle = sortableHandle(() => (\r\n    <MenuOutlined style={{ width: '15px' ,cursor: 'pointer', color: '#999' }} />\r\n));\r\n\r\nconst SortableItem = sortableElement(props => <tr {...props} />);\r\nconst SortableContainer = sortableContainer(props => <tbody {...props} />);\r\n\r\n\r\nconst CharacterList = ({ state: { initiatives }, dispatch, wider }) => {\r\n\r\n    const columns = useMemo(() => {\r\n        const fields = [\r\n            {\r\n                dataIndex: 'sort',\r\n                width: 15,\r\n                className: 'drag-visible',\r\n                render: () => <DragHandle />,\r\n            },\r\n            {\r\n                title: 'Name',\r\n                width: '50px',\r\n                className: 'drag-visible',\r\n                render: ({name, monster}) => (\r\n                    <span style={{ fontWeight: 500 , color: monster ? 'red' : 'green'  }}>{name}</span>\r\n                )\r\n            },\r\n            {\r\n                title: 'Init',\r\n                key: 'value',\r\n                dataIndex: 'value',\r\n            }\r\n        ];\r\n\r\n        if(wider){\r\n            fields.push({\r\n                title: 'HP',\r\n                render: ({hitpoints, monster}) => (\r\n                    <span style={{ fontWeight: 500 , color: hitpoints > 0 || !monster ? 'green' : 'red'}}>{hitpoints}</span>\r\n                )\r\n            });\r\n            fields.push({\r\n                title: 'Conditions',\r\n                dataIndex: 'conditions',\r\n                key: 'conditions',\r\n                render: tags => (\r\n                    <div style={{ display: 'flex', flexDirection: 'column'}}>\r\n                      {tags.map( ({color, condition}) => (\r\n                          <Tag color={color} key={condition}>\r\n                            {condition}\r\n                          </Tag>\r\n                        ))}\r\n                    </div>\r\n                  ),\r\n            });\r\n            fields.push({\r\n                key: 'id',\r\n                render: ({id, name}) => (\r\n                  <DeleteOutlined onClick={() => {\r\n                    confirm({\r\n                        title: `Do you Want to delete ${name ?? ''}?`,\r\n                        icon: null,\r\n                        onOk() {\r\n                            dispatch({ type: 'removeCharacter', value: id});\r\n                        },\r\n                      });\r\n                    }} />\r\n                ),\r\n              });\r\n        }\r\n        return fields;\r\n    }, [wider, dispatch]);\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex }) => {\r\n        if (oldIndex !== newIndex) {\r\n            const newInitiatives = arrayMove([].concat(initiatives), oldIndex, newIndex).filter(el => !!el);\r\n            dispatch({ type: \"sortInitiatives\", initiatives: newInitiatives });\r\n        }\r\n    };\r\n\r\n    const DraggableBodyRow = ({ className, style, ...restProps }) => {\r\n        const index = initiatives.findIndex(x => x.id === restProps['data-row-key']);\r\n        return <SortableItem index={index} {...restProps} />;\r\n    };\r\n\r\n    const DraggableContainer = props => (\r\n        <SortableContainer\r\n            useDragHandle\r\n            helperClass=\"row-dragging\"\r\n            onSortEnd={onSortEnd}\r\n            {...props}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div style={{ \r\n                height: '100vh',\r\n                overflowX: 'hidden',\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-between\",\r\n                borderRight: 'solid 2px lightgrey'\r\n            }} >\r\n            <Table\r\n                style={{ height: 'calc(100vh - 35px)', overflow: 'scroll', overflowX: 'hidden' }}\r\n                pagination={false}\r\n                dataSource={initiatives}\r\n                columns={columns}\r\n                rowKey=\"id\"\r\n                rowSelection={{\r\n                    type: 'radio',\r\n                    onChange: ([id]) => dispatch({ type: \"select\", value: id }),\r\n                }}\r\n                components={{\r\n                    body: {\r\n                        wrapper: DraggableContainer,\r\n                        row: DraggableBodyRow,\r\n                    },\r\n                }}\r\n            />\r\n            <Row style={{ height: '40px' }} >\r\n                <Col span={12}>\r\n                    <Button\r\n                        size=\"large\"\r\n                        style={{ maxWidth: '150px', height: '100%' }}\r\n                        type=\"primary\"\r\n                        disabled={initiatives.length < 2}\r\n                        onClick={() => dispatch({ type: \"back\" })} >\r\n                        Go Back\r\n                     </Button>\r\n                </Col>\r\n                <Col span={12} style={{ display: 'flex', flexDirection: 'row-reverse' }}>\r\n                    <Button\r\n                        size=\"large\"\r\n                        style={{ maxWidth: '150px', height: '100%' }}\r\n                        type=\"primary\"\r\n                        disabled={initiatives.length < 2}\r\n                        onClick={() => dispatch({ type: \"next\" })} >\r\n                        Next Character\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\nexport default CharacterList;\r\n","import React from 'react';\r\n\r\nimport { LineOutlined  } from '@ant-design/icons';\r\nimport { Button, Row, Col, Statistic } from 'antd';\r\n\r\nconst buttons = [\r\n    { value: \"1\", type: 'writeInputInitiative' },\r\n    { value: \"2\", type: 'writeInputInitiative' },\r\n    { value: \"3\", type: 'writeInputInitiative' },\r\n    { value: \"4\", type: 'writeInputInitiative' },\r\n    { value: \"5\", type: 'writeInputInitiative' },\r\n    { value: \"6\", type: 'writeInputInitiative' },\r\n    { value: \"7\", type: 'writeInputInitiative' },\r\n    { value: \"8\", type: 'writeInputInitiative' },\r\n    { value: \"9\", type: 'writeInputInitiative' },\r\n    { Icon: LineOutlined, type: 'negativeInputInitiative' },\r\n    { value: \"0\", type: 'writeInputInitiative' },\r\n];\r\n\r\n\r\nfunction Keyboard({dispatch}) {\r\n    return (\r\n        \r\n            buttons.map(({ type, value, Icon, danger }) => {\r\n                return (\r\n                    <Col span={8} key={type + value}>\r\n                        <Button\r\n                            danger={danger}\r\n                            size=\"large\"\r\n                            style={{ minWidth: '70px', height: '100%' }}\r\n                            type=\"primary\" onClick={() => dispatch({ type, value })} >\r\n                            {!!value ? value : <Icon />}\r\n                        </Button>\r\n                    </Col>\r\n                );\r\n            })\r\n        \r\n    )\r\n}\r\n\r\nexport default function Initiative({dispatch, state}) {\r\n    return <>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col span={8} >\r\n                    <Statistic\r\n                        style={{ margin : 10}}\r\n                        value={\"Initiative: \" + state.inputInitiative}\r\n                        precision={0}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[8, 8]}>\r\n                <Keyboard dispatch={dispatch} />\r\n            </Row>\r\n        </>\r\n}\r\n","import React from 'react';\r\n\r\nimport { Button, Row, Col, Statistic } from 'antd';\r\n\r\nconst buttons = [\r\n    { value: \"1\", type: 'writeInputHitpoints' },\r\n    { value: \"2\", type: 'writeInputHitpoints' },\r\n    { value: \"3\", type: 'writeInputHitpoints' },\r\n    { value: \"4\", type: 'writeInputHitpoints' },\r\n    { value: \"5\", type: 'writeInputHitpoints' },\r\n    { value: \"6\", type: 'writeInputHitpoints' },\r\n    { value: \"7\", type: 'writeInputHitpoints' },\r\n    { value: \"8\", type: 'writeInputHitpoints' },\r\n    { value: \"9\", type: 'writeInputHitpoints' },\r\n    { },\r\n    { value: \"0\", type: 'writeInputHitpoints' },\r\n];\r\n\r\n\r\nfunction Keyboard({dispatch}) {\r\n    return (\r\n        \r\n            buttons.map(({ type, value, Icon, danger }) => {\r\n                if(!type) return <Col span={8} key={\"vacio\"} />;\r\n                return (\r\n                    <Col span={8} key={value ?? type}>\r\n                        <Button\r\n                            danger={danger}\r\n                            size=\"large\"\r\n                            style={{ minWidth: '70px', height: '100%' }}\r\n                            type=\"primary\" onClick={() => dispatch({ type, value })} >\r\n                            {!!value ? value : <Icon />}\r\n                        </Button>\r\n                    </Col>\r\n                );\r\n            })\r\n        \r\n    )\r\n}\r\n\r\nexport default function HitPoints({dispatch, state}) {\r\n    return <>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col span={8} >\r\n                    <Statistic\r\n                        style={{ margin : 10}}\r\n                        value={\"HP: \" + state.inputHitpoints}\r\n                        precision={0}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[8, 8]}>\r\n                <Keyboard dispatch={dispatch} />\r\n            </Row>\r\n        </>\r\n}\r\n","import React from 'react';\r\n\r\nimport { Button, Row, Col, Statistic } from 'antd';\r\n\r\nconst buttonLetters = [\r\n    { value : \"q\", type: \"writeInputName\" },\r\n    { value : \"w\", type: \"writeInputName\" },\r\n    { value : \"e\", type: \"writeInputName\" },\r\n    { value : \"r\", type: \"writeInputName\" },\r\n    { value : \"t\", type: \"writeInputName\" },\r\n    { value : \"y\", type: \"writeInputName\" },\r\n    { value : \"u\", type: \"writeInputName\" },\r\n    { value : \"i\", type: \"writeInputName\" },\r\n    { value : \"o\", type: \"writeInputName\" },\r\n    { value : \"p\", type: \"writeInputName\" },\r\n    { value : \"a\", type: \"writeInputName\" },\r\n    { value : \"s\", type: \"writeInputName\" },\r\n    { value : \"d\", type: \"writeInputName\" },\r\n    { value : \"f\", type: \"writeInputName\" },\r\n    { value : \"g\", type: \"writeInputName\" },\r\n    { value : \"h\", type: \"writeInputName\" },\r\n    { value : \"j\", type: \"writeInputName\" },\r\n    { value : \"k\", type: \"writeInputName\" },\r\n    { value : \"l\", type: \"writeInputName\" },\r\n    { value : \"ñ\", type: \"writeInputName\" },\r\n    { value : \"z\", type: \"writeInputName\" },\r\n    { value : \"x\", type: \"writeInputName\" },\r\n    { value : \"c\", type: \"writeInputName\" },\r\n    { value : \"v\", type: \"writeInputName\" },\r\n    { value : \"b\", type: \"writeInputName\" },\r\n    { value : \"n\", type: \"writeInputName\" },\r\n    { value : \"m\", type: \"writeInputName\" },\r\n    { value : \"_\", type: \"writeInputName\" },\r\n    { value : \"??\", type: \"writeInputName\" },\r\n    { value : \"1\", type: \"writeInputName\" },\r\n    { value : \"2\", type: \"writeInputName\" },\r\n    { value : \"3\", type: \"writeInputName\" },\r\n    { value : \"4\", type: \"writeInputName\" },\r\n    { value : \"5\", type: \"writeInputName\" },\r\n    { value : \"6\", type: \"writeInputName\" },\r\n    { value : \"7\", type: \"writeInputName\" },\r\n    { value : \"8\", type: \"writeInputName\" },\r\n    { value : \"9\", type: \"writeInputName\" },\r\n    { value : \"0\", type: \"writeInputName\" },\r\n];\r\n\r\nfunction Keyboard({dispatch, extraWords}) {\r\n    return (\r\n        buttonLetters.concat(extraWords).map(({ type, value, Icon }) => {\r\n            return (\r\n                <Col key={value}>\r\n                    <Button\r\n                        size=\"large\"\r\n                        style={{ minWidth: '70px', height: '100%' }}\r\n                        type=\"primary\" onClick={() => dispatch({ type, value })} >\r\n                        {!!value ? value : <Icon />}\r\n                    </Button>\r\n                </Col>\r\n            );\r\n        })\r\n    )\r\n}\r\n\r\nexport default function Name({dispatch, state}) {\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    const players_param = urlParams.get('players') ? urlParams.get('players')  : null;\r\n    const players = players_param?.split(\"-\")?.map( ply => ({ value : ply, type: \"writeInputName\" })) ?? [];\r\n\r\n    return <>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col>\r\n                    <Statistic\r\n                        style={{ margin : 10}}\r\n                        value={\"Name: \" + state.inputName}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[8, 8]}>\r\n                <Keyboard extraWords={players} dispatch={dispatch} />\r\n            </Row>\r\n        </>\r\n}","import React, {useState} from 'react';\r\n\r\nimport { Button, Steps } from 'antd';\r\n\r\nimport { DeleteOutlined, RollbackOutlined } from '@ant-design/icons';\r\n\r\nimport Initiative from '../Initiative';\r\nimport HitPoints from '../HitPoints';\r\nimport Name from '../Name';\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n    {\r\n        title: 'Name',\r\n    },\r\n    {\r\n        title: 'Initiative',\r\n    },\r\n    {\r\n        title: 'Hit Points',\r\n    },\r\n];\r\n\r\nexport default function AddCharacter({state, dispatch}) {\r\n    const [current, setCurrent] = useState(0);\r\n    return (\r\n        <>\r\n           <Steps current={current}>\r\n                            {steps.map(item => (\r\n                                <Step key={item.title} title={item.title} />\r\n                            ))}\r\n                        </Steps>\r\n                        {\r\n                            current === 1 && <Initiative state={state} dispatch={dispatch} />\r\n                        }\r\n                        {\r\n                            current === 0 && <Name state={state} dispatch={dispatch} />\r\n                        }\r\n                        {\r\n                            current === 2 && <HitPoints state={state} dispatch={dispatch} />\r\n                        }\r\n                        <div className=\"steps-action\">\r\n                            {\r\n                                current === 0 &&\r\n                                <Button\r\n                                    danger\r\n                                    style={{width: '100px'}}\r\n                                    type=\"primary\" onClick={() => dispatch({ type: 'deleteInputName' })} >\r\n                                    <RollbackOutlined />\r\n                                </Button>\r\n                            }\r\n                            {\r\n                                current === 1 &&\r\n                                <Button\r\n                                    danger\r\n                                    style={{width: '100px'}}\r\n                                    type=\"primary\" onClick={() => dispatch({ type: 'deleteInputInitiative' })} >\r\n                                    <DeleteOutlined />\r\n                                </Button>\r\n                            }\r\n                            {\r\n                                current === 2 &&\r\n                                <Button\r\n                                    danger\r\n                                    style={{width: '100px'}}\r\n                                    type=\"primary\" onClick={() => dispatch({ type: 'deleteInputHitpoints' })} >\r\n                                    <DeleteOutlined />\r\n                                </Button>\r\n                            }\r\n\r\n                            {current > 0 && (\r\n                                <Button onClick={() => setCurrent(current - 1)}>\r\n                                    Previous\r\n                                </Button>\r\n                            )}\r\n                            {current < steps.length - 1 && (\r\n                                <Button type=\"primary\" onClick={() => setCurrent(current + 1)}>\r\n                                    Next\r\n                                </Button>\r\n                            )}\r\n\r\n                            {current === steps.length - 1 && (\r\n                                <Button type=\"primary\" danger onClick={() => { setCurrent(0); dispatch({ type: 'addInitiative', monster: true }) }}>\r\n                                    Create as a Monster\r\n                                </Button>\r\n                            )}\r\n                            {current === steps.length - 1 && (\r\n                                <Button type=\"primary\" onClick={() => { setCurrent(0); dispatch({ type: 'addInitiative', monster: false }) }}>\r\n                                    Create as a Player\r\n                                </Button>\r\n                            )}\r\n                        </div> \r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Row, Col, Modal, Input, Table } from 'antd';\r\nimport { DeleteOutlined, SaveOutlined } from '@ant-design/icons';\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst saveState = (states) => {\r\n    localStorage.setItem(\"states\", JSON.stringify(states))\r\n}\r\n\r\nconst getStates = () => {\r\n    const states_str = localStorage.getItem(\"states\");\r\n    const states = states_str ? JSON.parse(states_str) : [];\r\n    return states;\r\n}\r\n\r\nexport default function Settings({ dispatch, state }) {\r\n    const [stateSelected, setstateSelected] = useState(null);\r\n    const [name, setName] = useState(null);\r\n    const [states, setStates] = useState(getStates());\r\n\r\n    return (<>\r\n        <Row gutter={[8, 8]}>\r\n            <Col>\r\n                <Button\r\n                    size=\"large\"\r\n                    danger\r\n                    type=\"primary\" onClick={() => {\r\n                        confirm({\r\n                            title: `Do you want to delete everything in the store?`,\r\n                            icon: null,\r\n                            onOk() {\r\n                                dispatch({ type: 'deleteAll' });\r\n                            },\r\n                        });\r\n                    }} >\r\n                    <DeleteOutlined /> Delete Store\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n        <Row gutter={[8, 8]}>\r\n            <Col span={14}>\r\n                <Input size=\"large\" placeholder=\"name\" value={name} onChange={ ({target: {value}}) => setName(value)} />\r\n            </Col>\r\n            <Col span={5}>\r\n                <Button\r\n                    size=\"large\"\r\n                    type=\"primary\"\r\n                    disabled={!name}\r\n                    onClick={() => {\r\n                        confirm({\r\n                            title: `Do you want to save the actual character set list?`,\r\n                            icon: null,\r\n                            onOk() {\r\n                                const stateToBeSaved = {\r\n                                    name,\r\n                                    id: Date.now(),\r\n                                    state\r\n                                }\r\n                                states.push(stateToBeSaved);\r\n                                setName(null);\r\n                                saveState(states);\r\n                                setTimeout(() => setStates(getStates()), 0);\r\n                            },\r\n                        });\r\n                    }} >\r\n                    <SaveOutlined />\r\n                </Button>\r\n            </Col>\r\n            <Col span={5}>\r\n                <Button\r\n                    size=\"large\"\r\n                    type=\"primary\"\r\n                    disabled={!stateSelected}\r\n                    onClick={() => {\r\n                        confirm({\r\n                            title: `Do you want to activate this fight set list?`,\r\n                            icon: null,\r\n                            onOk() {\r\n                                dispatch({ type: 'loadState', value: stateSelected });\r\n                            },\r\n                        });\r\n                    }} >\r\n                    Activate\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n        <Table\r\n            style={{ overflow: 'scroll', overflowX: 'hidden' }}\r\n            pagination={false}\r\n            dataSource={states} // states stored in localstorage\r\n            columns={[\r\n                {\r\n                    title: 'Creation Date',\r\n                    key: 'id',\r\n                    dataIndex: 'id',\r\n                    render: id => <span>{(new Date(id)).toDateString()}</span>\r\n                },\r\n                {\r\n                    title: 'Fight',\r\n                    key: 'name',\r\n                    dataIndex: 'name',\r\n                },\r\n                {\r\n                    render: ({ id, name }) => (\r\n                        <DeleteOutlined onClick={() => {\r\n                            confirm({\r\n                                title: `Do you Want to delete ${name ?? ''}?`,\r\n                                icon: null,\r\n                                onOk() {\r\n                                    const newStates = states?.filter( state => id !== state.id);\r\n                                    saveState(newStates);\r\n                                    setTimeout(() => setStates(getStates()), 0);\r\n                                },\r\n                            });\r\n                        }} />\r\n                    )\r\n                }\r\n            ]}\r\n            rowKey=\"state\"\r\n            rowSelection={{\r\n                type: 'radio',\r\n                onChange: ([state]) => setstateSelected(state),\r\n            }}\r\n        />\r\n    </>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Button, Row, Col, Checkbox, Tag } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nconst buttonsHitpoints = [\r\n    { value: 1, type: 'editHitpoints' },\r\n    { value: 2, type: 'editHitpoints' },\r\n    { value: 3, type: 'editHitpoints' },\r\n    { value: 5, type: 'editHitpoints' },\r\n    { value: 10, type: 'editHitpoints' },\r\n    { value: 20, type: 'editHitpoints' },\r\n    { value: 30, type: 'editHitpoints' },\r\n    { value: 50, type: 'editHitpoints' }\r\n];\r\n\r\nconst buttonsConditions = [\r\n    { color: \"grey\" , condition: \"Petrified\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"lime\" , condition: \"Incapacitated\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"gold\" , condition: \"Unconscious\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"orange\" , condition: \"Paralyzed\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"cornflowerblue\" , condition: \"Invisible\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"cyan\" , condition: \"Deafened\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"geekblue\" , condition: \"Blinded\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"blue\" , condition: \"Frightened\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"purple\" , condition: \"Grappled\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"burlywood\" , condition: \"Restrained\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"magenta\" , condition: \"Charmed\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"green\" , condition: \"Poisoned\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"red\" , condition: \"Stunned\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"volcano\" , condition: \"Prone\", add: 'editCondition', remove: 'removeCondition' },\r\n];\r\n\r\nfunction KeyboardConditions({dispatch, conditions}) {\r\n\r\n    return (\r\n        buttonsConditions.map(({ add, remove, condition, color }) => {\r\n                const hasIt = conditions?.find( cond => cond.condition === condition);\r\n                return (\r\n                    <Col span={6} key={condition}>\r\n                        <Tag\r\n                            key={condition}\r\n                            color={'cornflowerblue'}\r\n                            onClick={ () =>  dispatch({ type: hasIt ? remove : add, value: { condition,  color }  })}\r\n                        >\r\n                           {hasIt && <DeleteOutlined /> } {condition}\r\n                        </Tag>\r\n                    </Col>\r\n                );\r\n            })\r\n        \r\n    )\r\n}\r\n\r\n\r\nfunction KeyboardHitpoints({dispatch, isNegative}) {\r\n    return (\r\n        \r\n        buttonsHitpoints.map(({ type, value, Icon }) => {\r\n                if(!type) return <Col span={8} key={\"vacio\"} />;\r\n                return (\r\n                    <Col span={8} key={value}>\r\n                        <Button\r\n                            size=\"large\"\r\n                            style={{ minWidth: '70px', height: '100%' }}\r\n                            type=\"primary\" onClick={() => dispatch({ type, value: isNegative ? -value: value })} >\r\n                            {isNegative && \"- \"}{!!value ? value : <Icon />}\r\n                        </Button>\r\n                    </Col>\r\n                );\r\n            })\r\n        \r\n    )\r\n}\r\n\r\nexport default function HitPointsConditionsManager({dispatch, state}) {\r\n    const [checked, onChange] = useState(true);\r\n    const { conditions, name } = state?.initiatives?.find( ini => ini.id === state.selected) ?? {};\r\n    return <>\r\n            <div className=\"LabelName\"><span className=\"Name\">{name}</span></div>\r\n            <div className=\"LabelName\">Hit Points:</div>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col>\r\n                    <Row gutter={[8, 8]}>\r\n                        <Col span={8} ><Checkbox checked={checked} onChange={({target : {checked: value}}) => onChange(value)}>Minus</Checkbox></Col>\r\n                        <KeyboardHitpoints dispatch={dispatch} isNegative={checked} />\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            <div className=\"LabelName\">Conditions:</div>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col>\r\n                    <Row gutter={[8, 8]}>\r\n                        <KeyboardConditions dispatch={dispatch} conditions={conditions} />\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n}\r\n","import React, { useEffect, useReducer, useState } from 'react';\r\nimport { Row, Col, Tabs } from 'antd';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport CharactersList from './CharactersList';\r\nimport AddCharacter from './AddCharacter';\r\nimport Settings from './Settings';\r\nimport HitPointsConditionsManager from './HitPointsConditionsManager';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'addInitiative': {\r\n            const character = {\r\n                value: state.inputInitiative ?? 0,\r\n                name: state.inputName ?? '',\r\n                hitpoints: state.inputHitpoints,\r\n                id: Date.now(),\r\n                monster: action.monster,\r\n                conditions: []\r\n            };\r\n            const initiatives = [...state.initiatives, character].sort((a, b) => b.value - a.value);\r\n            return { ...state, initiatives, inputInitiative: 0, inputName: '', inputHitpoints: 0 };\r\n        }\r\n        case 'deleteAll': {\r\n            return { initiatives: [], selected: null, inputInitiative: 0, inputName: '', inputHitpoints: 0 };\r\n        }\r\n        case 'loadState': {\r\n            return action.value;\r\n        }\r\n        case 'sortInitiatives': {\r\n            return { ...state, initiatives: action.initiatives };\r\n        }\r\n        case 'removeCharacter': {\r\n            const initiatives = state.initiatives.filter(({ id }) => id !== action.value);\r\n            return { ...state, initiatives, selected: state.selected === action.value ? null : state.selected};\r\n        }\r\n        case 'writeInputInitiative': {\r\n            const inputInitiative = parseInt(state.inputInitiative + action.value);\r\n            return { ...state, inputInitiative };\r\n        }\r\n        case 'writeInputName': {\r\n            const inputName = state.inputName + action.value;\r\n            return { ...state, inputName };\r\n        }\r\n        case 'writeInputHitpoints': {\r\n            const inputHitpoints = parseInt(state.inputHitpoints + action.value);\r\n            return { ...state, inputHitpoints };\r\n        }\r\n        case 'deleteInputInitiative': {\r\n            return { ...state, inputInitiative: 0 };\r\n        }\r\n        case 'deleteInputHitpoints': {\r\n            return { ...state, inputHitpoints: 0 };\r\n        }\r\n        case 'deleteInputName': {\r\n            return { ...state, inputName: state?.inputName?.slice(0, -1) ?? '' };\r\n        }\r\n        case 'negativeInputInitiative': {\r\n            return { ...state, inputInitiative: -state.inputInitiative };\r\n        }\r\n        case 'next': {\r\n            return { \r\n                ...state,\r\n                initiatives: state.initiatives.slice(1).concat(state.initiatives.slice(0, 1))\r\n            };\r\n        }\r\n        case 'back': {\r\n            return {\r\n                ...state,\r\n                initiatives: state.initiatives.slice(-1).concat(state.initiatives.slice(0, -1))\r\n            };\r\n        }\r\n        case 'select': {\r\n            const character = state.initiatives.find(({ id }) => id === action.value);\r\n            return { \r\n                ...state,\r\n                selected: character.id,\r\n                inputInitiative: character?.value,\r\n                inputName: character?.name,\r\n                inputHitpoints: character?.hitpoints\r\n            };\r\n        }\r\n        case 'editHitpoints': {\r\n            const initiatives = state.initiatives.map(ini => {\r\n                if (ini.id === state.selected) {\r\n                    const copy = cloneDeep(ini);\r\n                    copy.hitpoints = copy.hitpoints + action.value;\r\n                    return copy;\r\n                }\r\n                return ini;\r\n            })\r\n            return { ...state, initiatives };\r\n        }\r\n        case 'editCondition': {\r\n            const initiatives = state.initiatives.map(ini => {\r\n                if (ini.id === state.selected) {\r\n                    const copy = cloneDeep(ini);\r\n                    copy.conditions.push(action.value);\r\n                    return copy;\r\n                }\r\n                return ini;\r\n            })\r\n            return { ...state, initiatives };\r\n        }\r\n        case 'removeCondition': {\r\n            const initiatives = state.initiatives.map(ini => {\r\n                if (ini.id === state.selected) {\r\n                    const copy = cloneDeep(ini);\r\n                    copy.conditions = copy.conditions.filter( cond => cond.condition !== action.value.condition);\r\n                    return copy;\r\n                }\r\n                return ini;\r\n            })\r\n            return { ...state, initiatives };\r\n        }\r\n        case 'clean': {\r\n            return { ...state, inputInitiative: 0, inputName: '', inputHitpoints: 0, selected: null };\r\n        }\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\n\r\nexport default function App({storedState, initialState}) {\r\n    const [state, dispatch] = useReducer(reducer, storedState ?? initialState);\r\n    const [activeTab, setTab] = useState(\"2\");\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"storedState\", JSON.stringify(state))\r\n    }, [state]);\r\n\r\n    useEffect(() => {\r\n        if(!state.selected){\r\n            setTab(\"2\");\r\n        }\r\n    }, [state.selected]);\r\n\r\n    return (\r\n        <Row style={{ width: \"100%\", height: \"100%\" }}>\r\n            <Col span={activeTab === \"2\" ? 8 : 14} >\r\n                <CharactersList state={state} dispatch={dispatch} wider={activeTab === \"1\"} />\r\n            </Col>\r\n            <Col span={activeTab === \"2\" ? 16 : 10} >\r\n                <Tabs style={{padding: 8}}  onChange={setTab} activeKey={activeTab}>\r\n                    <TabPane tab=\"Add Character\" key=\"2\">\r\n                        <AddCharacter state={state} dispatch={dispatch} />\r\n                    </TabPane>\r\n                    <TabPane disabled={!state.selected} tab=\"Character Manager\" key=\"1\">\r\n                        <HitPointsConditionsManager state={state} dispatch={dispatch} />\r\n                    </TabPane>\r\n                    <TabPane tab={<> <SettingOutlined /> Settings</>} key=\"3\">\r\n                        <Settings state={state} dispatch={dispatch} />\r\n                    </TabPane>\r\n                </Tabs>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './App';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport './App.css';\n\nconst initialState = { initiatives: [], selected: null, inputInitiative: 0, inputName: '', inputHitpoints: 0 };\n\ntry {\n    const string_state = localStorage.getItem(\"storedState\");\n    const state = string_state ? JSON.parse(string_state) : initialState;\n    state.selected = null;\n    ReactDOM.render(<App storedState={state} initialState={initialState} />, document.getElementById('root'));\n} catch (error) {\n    ReactDOM.render(<App initialState={initialState}  />, document.getElementById('root'));\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}