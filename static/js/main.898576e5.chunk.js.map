{"version":3,"sources":["Initiative/index.js","HitPoints/index.js","HitPointsEditor/index.js","Name/index.js","App.js","index.js"],"names":["buttons","value","type","Icon","LineOutlined","DeleteOutlined","Keyboard","dispatch","map","span","size","style","minWidth","height","onClick","Initiative","state","gutter","justify","margin","inputInitiative","precision","HitPoints","inputHitpoints","isNegative","useState","checked","onChange","initiatives","find","ini","id","selected","hitpoints","target","buttonLetters","Name","inputName","TabPane","Tabs","Step","Steps","steps","title","initialState","initiatives_position","reducer","action","index","findIndex","initiative","name","Date","now","monster","sort","a","b","slice","concat","filter","parseInt","length","copy_ini","Error","App","useReducer","current","setCurrent","className","maxWidth","disabled","display","flexDirection","maxHeight","overflow","overflowX","Item","icon","fontSize","fontWeight","color","textAlign","marginLeft","backgroundColor","defaultActiveKey","tab","item","danger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.898576e5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { DeleteOutlined, LineOutlined  } from '@ant-design/icons';\r\nimport { Button, Row, Col, Statistic } from 'antd';\r\n\r\nconst buttons = [\r\n    { value: \"1\", type: 'writeInputInitiative' },\r\n    { value: \"2\", type: 'writeInputInitiative' },\r\n    { value: \"3\", type: 'writeInputInitiative' },\r\n    { value: \"4\", type: 'writeInputInitiative' },\r\n    { value: \"5\", type: 'writeInputInitiative' },\r\n    { value: \"6\", type: 'writeInputInitiative' },\r\n    { value: \"7\", type: 'writeInputInitiative' },\r\n    { value: \"8\", type: 'writeInputInitiative' },\r\n    { value: \"9\", type: 'writeInputInitiative' },\r\n    { Icon: LineOutlined, type: 'negativeInputInitiative' },\r\n    { value: \"0\", type: 'writeInputInitiative' },\r\n    { Icon: DeleteOutlined, type: 'deleteInputInitiative' },\r\n];\r\n\r\n\r\nfunction Keyboard({dispatch}) {\r\n    return (\r\n        \r\n            buttons.map(({ type, value, Icon }) => {\r\n                return (\r\n                    <Col span={8} key={value}>\r\n                        <Button\r\n                            size=\"large\"\r\n                            style={{ minWidth: '70px', height: '100%' }}\r\n                            type=\"primary\" onClick={() => dispatch({ type, value })} >\r\n                            {!!value ? value : <Icon />}\r\n                        </Button>\r\n                    </Col>\r\n                );\r\n            })\r\n        \r\n    )\r\n}\r\n\r\nexport default function Initiative({dispatch, state}) {\r\n    return <>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col span={8} >\r\n                    <Statistic\r\n                        style={{ margin : 10}}\r\n                        value={state.inputInitiative}\r\n                        precision={0}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[16, 16]}>\r\n                <Keyboard dispatch={dispatch} />\r\n            </Row>\r\n        </>\r\n}\r\n","import React from 'react';\r\n\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport { Button, Row, Col, Statistic } from 'antd';\r\n\r\nconst buttons = [\r\n    { value: \"1\", type: 'writeInputHitpoints' },\r\n    { value: \"2\", type: 'writeInputHitpoints' },\r\n    { value: \"3\", type: 'writeInputHitpoints' },\r\n    { value: \"4\", type: 'writeInputHitpoints' },\r\n    { value: \"5\", type: 'writeInputHitpoints' },\r\n    { value: \"6\", type: 'writeInputHitpoints' },\r\n    { value: \"7\", type: 'writeInputHitpoints' },\r\n    { value: \"8\", type: 'writeInputHitpoints' },\r\n    { value: \"9\", type: 'writeInputHitpoints' },\r\n    { },\r\n    { value: \"0\", type: 'writeInputHitpoints' },\r\n    { Icon: DeleteOutlined, type: 'deleteInputHitpoints' },\r\n];\r\n\r\n\r\nfunction Keyboard({dispatch}) {\r\n    return (\r\n        \r\n            buttons.map(({ type, value, Icon }) => {\r\n                if(!type) return <Col span={8} key={\"vacio\"} />;\r\n                return (\r\n                    <Col span={8} key={value ?? type}>\r\n                        <Button\r\n                            size=\"large\"\r\n                            style={{ minWidth: '70px', height: '100%' }}\r\n                            type=\"primary\" onClick={() => dispatch({ type, value })} >\r\n                            {!!value ? value : <Icon />}\r\n                        </Button>\r\n                    </Col>\r\n                );\r\n            })\r\n        \r\n    )\r\n}\r\n\r\nexport default function HitPoints({dispatch, state}) {\r\n    return <>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col span={8} >\r\n                    <Statistic\r\n                        style={{ margin : 10}}\r\n                        value={state.inputHitpoints}\r\n                        precision={0}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[16, 16]}>\r\n                <Keyboard dispatch={dispatch} />\r\n            </Row>\r\n        </>\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport { Button, Row, Col, Statistic, Checkbox } from 'antd';\r\n\r\nconst buttons = [\r\n    { value: 1, type: 'editHitpoints' },\r\n    { value: 2, type: 'editHitpoints' },\r\n    { value: 3, type: 'editHitpoints' },\r\n    { value: 5, type: 'editHitpoints' },\r\n    { value: 10, type: 'editHitpoints' },\r\n    { value: 20, type: 'editHitpoints' },\r\n    { value: 30, type: 'editHitpoints' },\r\n    { value: 50, type: 'editHitpoints' }\r\n];\r\n\r\n\r\nfunction Keyboard({dispatch, isNegative}) {\r\n    return (\r\n        \r\n            buttons.map(({ type, value, Icon }) => {\r\n                if(!type) return <Col span={8} key={\"vacio\"} />;\r\n                return (\r\n                    <Col span={8} key={value}>\r\n                        <Button\r\n                            size=\"large\"\r\n                            style={{ minWidth: '70px', height: '100%' }}\r\n                            type=\"primary\" onClick={() => dispatch({ type, value: isNegative ? -value: value })} >\r\n                            {isNegative && \"- \"}{!!value ? value : <Icon />}\r\n                        </Button>\r\n                    </Col>\r\n                );\r\n            })\r\n        \r\n    )\r\n}\r\n\r\nexport default function HitPoints({dispatch, state}) {\r\n    const [checked, onChange] = useState(true)\r\n    return <>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col span={8} >\r\n                    <Statistic\r\n                        style={{ margin : 10}}\r\n                        value={state?.initiatives?.find( ini => ini.id === state.selected)?.hitpoints}\r\n                        precision={0}\r\n                    />\r\n                    <Checkbox checked={checked} onChange={({target : {checked: value}}) => onChange(value)}>Minus</Checkbox>\r\n                </Col>\r\n                <Col>\r\n                    \r\n                    <Row>\r\n                        <Keyboard dispatch={dispatch} isNegative={checked} />\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n}\r\n","import React from 'react';\r\n\r\nimport { DeleteOutlined  } from '@ant-design/icons';\r\nimport { Button, Row, Col, Statistic } from 'antd';\r\n\r\nconst buttonLetters = [\r\n    { value : \"q\", type: \"writeInputName\" },\r\n    { value : \"w\", type: \"writeInputName\" },\r\n    { value : \"e\", type: \"writeInputName\" },\r\n    { value : \"r\", type: \"writeInputName\" },\r\n    { value : \"t\", type: \"writeInputName\" },\r\n    { value : \"y\", type: \"writeInputName\" },\r\n    { value : \"u\", type: \"writeInputName\" },\r\n    { value : \"i\", type: \"writeInputName\" },\r\n    { value : \"o\", type: \"writeInputName\" },\r\n    { value : \"p\", type: \"writeInputName\" },\r\n    { value : \"a\", type: \"writeInputName\" },\r\n    { value : \"s\", type: \"writeInputName\" },\r\n    { value : \"d\", type: \"writeInputName\" },\r\n    { value : \"f\", type: \"writeInputName\" },\r\n    { value : \"g\", type: \"writeInputName\" },\r\n    { value : \"h\", type: \"writeInputName\" },\r\n    { value : \"j\", type: \"writeInputName\" },\r\n    { value : \"k\", type: \"writeInputName\" },\r\n    { value : \"l\", type: \"writeInputName\" },\r\n    { value : \"ñ\", type: \"writeInputName\" },\r\n    { value : \"z\", type: \"writeInputName\" },\r\n    { value : \"x\", type: \"writeInputName\" },\r\n    { value : \"c\", type: \"writeInputName\" },\r\n    { value : \"v\", type: \"writeInputName\" },\r\n    { value : \"b\", type: \"writeInputName\" },\r\n    { value : \"n\", type: \"writeInputName\" },\r\n    { value : \"m\", type: \"writeInputName\" },\r\n];\r\n\r\nfunction Keyboard({dispatch}) {\r\n    return (\r\n        buttonLetters.map(({ type, value, Icon }) => {\r\n            return (\r\n                <Col key={value}>\r\n                    <Button\r\n                        size=\"large\"\r\n                        style={{ minWidth: '70px', height: '100%' }}\r\n                        type=\"primary\" onClick={() => dispatch({ type, value })} >\r\n                        {!!value ? value : <Icon />}\r\n                    </Button>\r\n                </Col>\r\n            );\r\n        })\r\n    )\r\n}\r\n\r\nexport default function Name({dispatch, state}) {\r\n    return <>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col span={8} >\r\n                    <Statistic\r\n                        style={{ margin : 10}}\r\n                        value={state.inputName}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[8, 8]}>\r\n                <Keyboard dispatch={dispatch} />\r\n                <Col span={2} />\r\n                <Col >\r\n                    <Button\r\n                        size=\"large\"\r\n                        style={{ minWidth: '70px', height: '100%' }}\r\n                        type=\"primary\" onClick={() => dispatch({ type: 'deleteInputName' })} >\r\n                        <DeleteOutlined />\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n}\r\n","import React, { useReducer, useState } from 'react';\r\nimport { Row, Col, Button, Avatar, Menu, Tabs, Steps } from 'antd';\r\n\r\nimport Initiative from './Initiative';\r\nimport HitPoints from './HitPoints';\r\nimport HitPointsEditor from './HitPointsEditor';\r\nimport Name from './Name';\r\n\r\nconst { TabPane } = Tabs;\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n    {\r\n        title: 'Initiative',\r\n    },\r\n    {\r\n        title: 'Name',\r\n    },\r\n    {\r\n        title: 'Hit Points',\r\n    },\r\n];\r\n\r\n\r\nconst initialState = { initiatives: [], initiatives_position: 0, selected: null, inputInitiative: 0, inputName: '', inputHitpoints: 0 };\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'addInitiative': {\r\n            const index = state.initiatives.findIndex(initiative => initiative.value <= state.inputInitiative);\r\n            const initiative = {\r\n                value: state.inputInitiative ?? 0,\r\n                name: state.inputName,\r\n                hitpoints: state.inputHitpoints,\r\n                id: Date.now(),\r\n                monster: action.monster\r\n            };\r\n            if (index === -1) {\r\n                const initiatives = [initiative, ...state.initiatives].sort((a, b) => a.value - b.value);\r\n                return { ...state, initiatives, inputInitiative: 0, inputName: '', inputHitpoints: 0 };\r\n            } else {\r\n                const initiatives = state.initiatives\r\n                    .slice(0, index)\r\n                    .concat(initiative)\r\n                    .concat(state.initiatives.slice(index))\r\n                    .sort((a, b) => a.value - b.value);\r\n                return { ...state, initiatives, inputInitiative: 0, inputName: '', inputHitpoints: 0 };\r\n            }\r\n        }\r\n        case 'removeInitiative': {\r\n            const initiatives = state.initiatives.filter(({ value, name }) => value !== action.value && name !== action.name);\r\n            return { ...state, initiatives };\r\n        }\r\n        case 'writeInputInitiative': {\r\n            const inputInitiative = parseInt(state.inputInitiative + action.value);\r\n            return { ...state, inputInitiative };\r\n        }\r\n        case 'writeInputName': {\r\n            const inputName = state.inputName + action.value;\r\n            return { ...state, inputName };\r\n        }\r\n        case 'writeInputHitpoints': {\r\n            const inputHitpoints = parseInt(state.inputHitpoints + action.value);\r\n            return { ...state, inputHitpoints };\r\n        }\r\n        case 'deleteInputInitiative': {\r\n            return { ...state, inputInitiative: 0 };\r\n        }\r\n        case 'deleteInputHitpoints': {\r\n            return { ...state, inputHitpoints: 0 };\r\n        }\r\n        case 'deleteInputName': {\r\n            return { ...state, inputName: '' };\r\n        }\r\n        case 'negativeInputInitiative': {\r\n            return { ...state, inputInitiative: -state.inputInitiative };\r\n        }\r\n        case 'next': {\r\n            return { ...state, initiatives_position: (state.initiatives_position + 1) % state.initiatives.length };\r\n        }\r\n        case 'back': {\r\n            return {\r\n                ...state,\r\n                initiatives_position:\r\n                    state.initiatives_position === 0\r\n                        ? state.initiatives.length - 1\r\n                        : state.initiatives_position - 1\r\n            };\r\n        }\r\n        case 'select': {\r\n            return { ...state, selected: action.value };\r\n        }\r\n        case 'editHitpoints': {\r\n            const initiatives = state.initiatives.map( ini => {\r\n                const copy_ini = {...ini};\r\n                if(ini.id === state.selected){\r\n                    copy_ini.hitpoints = copy_ini.hitpoints + action.value;\r\n                }\r\n                return copy_ini;\r\n            })\r\n            return { ...state, initiatives };\r\n        }\r\n        case 'clean': {\r\n            return { ...state, inputInitiative: 0, inputName: '', inputHitpoints: 0, selected: null  };\r\n        }\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\n\r\nexport default function App() {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    const [current, setCurrent] = useState(0);\r\n\r\n    return (\r\n        <Row className=\"App\" gutter={[16, 16]}>\r\n            <Col span={8} >\r\n                <Row style={{ height: '40px' }} >\r\n                    <Col span={12}>\r\n                        <Button\r\n                            size=\"large\"\r\n                            style={{ maxWidth: '150px', height: '100%' }}\r\n                            type=\"primary\"\r\n                            disabled={state.initiatives.length < 2}\r\n                            onClick={() => dispatch({ type: \"back\" })} >\r\n                            Back\r\n                    </Button>\r\n                    </Col>\r\n                    <Col span={12} style={{ display: 'flex', flexDirection: 'row-reverse' }}>\r\n                        <Button\r\n                            size=\"large\"\r\n                            style={{ maxWidth: '150px', height: '100%' }}\r\n                            type=\"primary\"\r\n                            disabled={state.initiatives.length < 2}\r\n                            onClick={() => dispatch({ type: \"next\" })} >\r\n                            Next\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Menu style={{ maxHeight: 'calc(100vh - 40px)', overflow: 'scroll', overflowX: 'hidden' }} >\r\n                    {state.initiatives\r\n                        .slice(state.initiatives_position)\r\n                        .concat(\r\n                            state.initiatives\r\n                                .slice(0, state.initiatives_position)\r\n                        )\r\n                        .map(({ value, name, id, hitpoints, monster }) => (\r\n                            <Menu.Item\r\n                                style={{ height: '50px' }}\r\n                                key={id}\r\n                                onClick={() => dispatch({ type: \"select\", value: id })}\r\n                                icon={<Avatar size={50} style={{ fontSize: 25, fontWeight: 700, color: 'blue' }}>{value}</Avatar>}>\r\n                                { monster && <Avatar\r\n                                    size={50}\r\n                                    style={{\r\n                                        textAlign: 'end',\r\n                                        fontSize: 25,\r\n                                        fontWeight: 500,\r\n                                        marginLeft: 20,\r\n                                        color: 'white',\r\n                                        backgroundColor: hitpoints > 0 ? 'green' : 'red'\r\n                                    }}>\r\n                                    {hitpoints}\r\n                                </Avatar>}\r\n                                <span className=\"initiative\">{name}</span>\r\n                            </Menu.Item>\r\n                        ))}\r\n                </Menu>\r\n            </Col>\r\n            <Col span={16} >\r\n                <Tabs defaultActiveKey=\"2\">\r\n                    <TabPane tab=\"Add NPC/PC\" key=\"2\">\r\n                        <Steps current={current}>\r\n                            {steps.map(item => (\r\n                                <Step key={item.title} title={item.title} />\r\n                            ))}\r\n                        </Steps>\r\n                        {\r\n                            current === 0 && <Initiative state={state} dispatch={dispatch} />\r\n                        }\r\n                        {\r\n                            current === 1 && <Name state={state} dispatch={dispatch} />\r\n                        }\r\n                        {\r\n                            current === 2 && <HitPoints state={state} dispatch={dispatch} />\r\n                        }\r\n                        <div className=\"steps-action\">\r\n\r\n                            {current > 0 && (\r\n                                <Button style={{ margin: '0 8px' }} onClick={() => setCurrent(current - 1)}>\r\n                                    Previous\r\n                                </Button>\r\n                            )}\r\n                            {current < steps.length - 1 && (\r\n                                <Button type=\"primary\" onClick={() => setCurrent(current + 1)}>\r\n                                    Next\r\n                                </Button>\r\n                            )}\r\n\r\n                            {current === steps.length - 1 && (\r\n                                <Button type=\"primary\" danger onClick={() => {setCurrent(0); dispatch({ type: 'addInitiative', monster: true })}}>\r\n                                    Done Monster\r\n                                </Button>\r\n                            )}\r\n                            {current === steps.length - 1 && (\r\n                                <Button type=\"primary\" onClick={() => {setCurrent(0); dispatch({ type: 'addInitiative', monster: false })}}>\r\n                                    Done Player\r\n                                </Button>\r\n                            )}\r\n                        </div>\r\n                    </TabPane>\r\n                    <TabPane disabled={!state.selected} tab=\"Hit Points\" key=\"1\">\r\n                        <HitPointsEditor state={state} dispatch={dispatch} />\r\n                    </TabPane>\r\n                </Tabs>\r\n            </Col>\r\n        </Row>\r\n\r\n\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './App';\n\nimport './App.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}