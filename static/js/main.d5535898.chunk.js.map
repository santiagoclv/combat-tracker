{"version":3,"sources":["CharactersList/index.js","Initiative/index.js","HitPoints/index.js","Name/index.js","AddCharacter/index.js","Settings/index.js","HitPointsConditionsManager/index.js","App.js","index.js"],"names":["confirm","Modal","DragHandle","sortableHandle","MenuOutlined","style","width","cursor","color","SortableItem","sortableElement","props","SortableContainer","sortableContainer","CharacterList","initiatives","state","dispatch","wider","columns","useMemo","fields","dataIndex","className","render","title","name","monster","fontWeight","key","push","hitpoints","tags","display","flexDirection","map","condition","id","DeleteOutlined","onClick","icon","onOk","type","value","onSortEnd","oldIndex","newIndex","newInitiatives","arrayMove","concat","filter","el","height","overflowX","justifyContent","borderRight","overflow","pagination","dataSource","rowKey","rowSelection","onChange","components","body","wrapper","useDragHandle","helperClass","row","restProps","index","findIndex","x","span","size","maxWidth","disabled","length","buttons","Icon","LineOutlined","Keyboard","danger","minWidth","Initiative","gutter","justify","margin","inputInitiative","precision","HitPoints","inputHitpoints","buttonLetters","extraWords","Name","queryString","window","location","search","urlParams","URLSearchParams","players_param","get","players","split","ply","inputName","Step","Steps","steps","AddCharacter","useState","current","setCurrent","item","RollbackOutlined","Settings","buttonsHitpoints","buttonsConditions","add","remove","KeyboardConditions","conditions","hasIt","find","cond","KeyboardHitpoints","isNegative","HitPointsConditionsManager","checked","ini","selected","target","TabPane","Tabs","reducer","action","character","Date","now","sort","a","b","parseInt","slice","copy","cloneDeep","Error","App","storedState","initialState","useReducer","activeTab","setTab","useEffect","localStorage","setItem","JSON","stringify","CharactersList","activeKey","tab","SettingOutlined","string_state","getItem","parse","ReactDOM","document","getElementById","error"],"mappings":"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","file":"static/js/main.d5535898.chunk.js","sourcesContent":["import React, {useMemo} from 'react';\r\nimport { Table, Tag, Modal, Row, Col, Button } from 'antd';\r\nimport { sortableContainer, sortableElement, sortableHandle, arrayMove } from 'react-sortable-hoc';\r\n\r\nimport { DeleteOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst DragHandle = sortableHandle(() => (\r\n    <MenuOutlined style={{ width: '15px' ,cursor: 'pointer', color: '#999' }} />\r\n));\r\n\r\nconst SortableItem = sortableElement(props => <tr {...props} />);\r\nconst SortableContainer = sortableContainer(props => <tbody {...props} />);\r\n\r\n\r\nconst CharacterList = ({ state: { initiatives }, dispatch, wider }) => {\r\n\r\n    const columns = useMemo(() => {\r\n        const fields = [\r\n            {\r\n                dataIndex: 'sort',\r\n                width: 15,\r\n                className: 'drag-visible',\r\n                render: () => <DragHandle />,\r\n            },\r\n            {\r\n                title: 'Name',\r\n                width: '50px',\r\n                className: 'drag-visible',\r\n                render: ({name, monster}) => (\r\n                    <span style={{ fontWeight: 500 , color: monster ? 'red' : 'green'  }}>{name}</span>\r\n                )\r\n            },\r\n            {\r\n                title: 'Init',\r\n                key: 'value',\r\n                dataIndex: 'value',\r\n            }\r\n        ];\r\n\r\n        if(wider){\r\n            fields.push({\r\n                title: 'HP',\r\n                render: ({hitpoints, monster}) => (\r\n                    <span style={{ fontWeight: 500 , color: hitpoints > 0 || !monster ? 'green' : 'red'}}>{hitpoints}</span>\r\n                )\r\n            });\r\n            fields.push({\r\n                title: 'Conditions',\r\n                dataIndex: 'conditions',\r\n                key: 'conditions',\r\n                render: tags => (\r\n                    <div style={{ display: 'flex', flexDirection: 'column'}}>\r\n                      {tags.map( ({color, condition}) => (\r\n                          <Tag color={color} key={condition}>\r\n                            {condition}\r\n                          </Tag>\r\n                        ))}\r\n                    </div>\r\n                  ),\r\n            });\r\n            fields.push({\r\n                key: 'id',\r\n                render: ({id, name}) => (\r\n                  <DeleteOutlined onClick={() => {\r\n                    confirm({\r\n                        title: `Do you Want to delete ${name ?? ''}?`,\r\n                        icon: null,\r\n                        onOk() {\r\n                            dispatch({ type: 'removeCharacter', value: id});\r\n                        },\r\n                      });\r\n                    }} />\r\n                ),\r\n              },);\r\n        }\r\n        return fields;\r\n    }, [wider, dispatch]);\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex }) => {\r\n        if (oldIndex !== newIndex) {\r\n            const newInitiatives = arrayMove([].concat(initiatives), oldIndex, newIndex).filter(el => !!el);\r\n            dispatch({ type: \"sortInitiatives\", initiatives: newInitiatives });\r\n        }\r\n    };\r\n\r\n    const DraggableBodyRow = ({ className, style, ...restProps }) => {\r\n        const index = initiatives.findIndex(x => x.id === restProps['data-row-key']);\r\n        return <SortableItem index={index} {...restProps} />;\r\n    };\r\n\r\n    const DraggableContainer = props => (\r\n        <SortableContainer\r\n            useDragHandle\r\n            helperClass=\"row-dragging\"\r\n            onSortEnd={onSortEnd}\r\n            {...props}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div style={{ \r\n                height: '100vh',\r\n                overflowX: 'hidden',\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-between\",\r\n                borderRight: 'solid 2px lightgrey'\r\n            }} >\r\n            <Table\r\n                style={{ height: 'calc(100vh - 40px)', overflow: 'scroll', overflowX: 'hidden' }}\r\n                pagination={false}\r\n                dataSource={initiatives}\r\n                columns={columns}\r\n                rowKey=\"id\"\r\n                rowSelection={{\r\n                    type: 'radio',\r\n                    onChange: ([id]) => dispatch({ type: \"select\", value: id }),\r\n                }}\r\n                components={{\r\n                    body: {\r\n                        wrapper: DraggableContainer,\r\n                        row: DraggableBodyRow,\r\n                    },\r\n                }}\r\n            />\r\n            <Row style={{ height: '40px' }} >\r\n                <Col span={12}>\r\n                    <Button\r\n                        size=\"large\"\r\n                        style={{ maxWidth: '150px', height: '100%' }}\r\n                        type=\"primary\"\r\n                        disabled={initiatives.length < 2}\r\n                        onClick={() => dispatch({ type: \"back\" })} >\r\n                        Go Back\r\n                     </Button>\r\n                </Col>\r\n                <Col span={12} style={{ display: 'flex', flexDirection: 'row-reverse' }}>\r\n                    <Button\r\n                        size=\"large\"\r\n                        style={{ maxWidth: '150px', height: '100%' }}\r\n                        type=\"primary\"\r\n                        disabled={initiatives.length < 2}\r\n                        onClick={() => dispatch({ type: \"next\" })} >\r\n                        Next Character\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\nexport default CharacterList;\r\n","import React from 'react';\r\n\r\nimport { LineOutlined  } from '@ant-design/icons';\r\nimport { Button, Row, Col, Statistic } from 'antd';\r\n\r\nconst buttons = [\r\n    { value: \"1\", type: 'writeInputInitiative' },\r\n    { value: \"2\", type: 'writeInputInitiative' },\r\n    { value: \"3\", type: 'writeInputInitiative' },\r\n    { value: \"4\", type: 'writeInputInitiative' },\r\n    { value: \"5\", type: 'writeInputInitiative' },\r\n    { value: \"6\", type: 'writeInputInitiative' },\r\n    { value: \"7\", type: 'writeInputInitiative' },\r\n    { value: \"8\", type: 'writeInputInitiative' },\r\n    { value: \"9\", type: 'writeInputInitiative' },\r\n    { Icon: LineOutlined, type: 'negativeInputInitiative' },\r\n    { value: \"0\", type: 'writeInputInitiative' },\r\n];\r\n\r\n\r\nfunction Keyboard({dispatch}) {\r\n    return (\r\n        \r\n            buttons.map(({ type, value, Icon, danger }) => {\r\n                return (\r\n                    <Col span={8} key={type + value}>\r\n                        <Button\r\n                            danger={danger}\r\n                            size=\"large\"\r\n                            style={{ minWidth: '70px', height: '100%' }}\r\n                            type=\"primary\" onClick={() => dispatch({ type, value })} >\r\n                            {!!value ? value : <Icon />}\r\n                        </Button>\r\n                    </Col>\r\n                );\r\n            })\r\n        \r\n    )\r\n}\r\n\r\nexport default function Initiative({dispatch, state}) {\r\n    return <>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col span={8} >\r\n                    <Statistic\r\n                        style={{ margin : 10}}\r\n                        value={\"Initiative: \" + state.inputInitiative}\r\n                        precision={0}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[8, 8]}>\r\n                <Keyboard dispatch={dispatch} />\r\n            </Row>\r\n        </>\r\n}\r\n","import React from 'react';\r\n\r\nimport { Button, Row, Col, Statistic } from 'antd';\r\n\r\nconst buttons = [\r\n    { value: \"1\", type: 'writeInputHitpoints' },\r\n    { value: \"2\", type: 'writeInputHitpoints' },\r\n    { value: \"3\", type: 'writeInputHitpoints' },\r\n    { value: \"4\", type: 'writeInputHitpoints' },\r\n    { value: \"5\", type: 'writeInputHitpoints' },\r\n    { value: \"6\", type: 'writeInputHitpoints' },\r\n    { value: \"7\", type: 'writeInputHitpoints' },\r\n    { value: \"8\", type: 'writeInputHitpoints' },\r\n    { value: \"9\", type: 'writeInputHitpoints' },\r\n    { },\r\n    { value: \"0\", type: 'writeInputHitpoints' },\r\n];\r\n\r\n\r\nfunction Keyboard({dispatch}) {\r\n    return (\r\n        \r\n            buttons.map(({ type, value, Icon, danger }) => {\r\n                if(!type) return <Col span={8} key={\"vacio\"} />;\r\n                return (\r\n                    <Col span={8} key={value ?? type}>\r\n                        <Button\r\n                            danger={danger}\r\n                            size=\"large\"\r\n                            style={{ minWidth: '70px', height: '100%' }}\r\n                            type=\"primary\" onClick={() => dispatch({ type, value })} >\r\n                            {!!value ? value : <Icon />}\r\n                        </Button>\r\n                    </Col>\r\n                );\r\n            })\r\n        \r\n    )\r\n}\r\n\r\nexport default function HitPoints({dispatch, state}) {\r\n    return <>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col span={8} >\r\n                    <Statistic\r\n                        style={{ margin : 10}}\r\n                        value={\"HP: \" + state.inputHitpoints}\r\n                        precision={0}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[8, 8]}>\r\n                <Keyboard dispatch={dispatch} />\r\n            </Row>\r\n        </>\r\n}\r\n","import React from 'react';\r\n\r\nimport { Button, Row, Col, Statistic } from 'antd';\r\n\r\nconst buttonLetters = [\r\n    { value : \"q\", type: \"writeInputName\" },\r\n    { value : \"w\", type: \"writeInputName\" },\r\n    { value : \"e\", type: \"writeInputName\" },\r\n    { value : \"r\", type: \"writeInputName\" },\r\n    { value : \"t\", type: \"writeInputName\" },\r\n    { value : \"y\", type: \"writeInputName\" },\r\n    { value : \"u\", type: \"writeInputName\" },\r\n    { value : \"i\", type: \"writeInputName\" },\r\n    { value : \"o\", type: \"writeInputName\" },\r\n    { value : \"p\", type: \"writeInputName\" },\r\n    { value : \"a\", type: \"writeInputName\" },\r\n    { value : \"s\", type: \"writeInputName\" },\r\n    { value : \"d\", type: \"writeInputName\" },\r\n    { value : \"f\", type: \"writeInputName\" },\r\n    { value : \"g\", type: \"writeInputName\" },\r\n    { value : \"h\", type: \"writeInputName\" },\r\n    { value : \"j\", type: \"writeInputName\" },\r\n    { value : \"k\", type: \"writeInputName\" },\r\n    { value : \"l\", type: \"writeInputName\" },\r\n    { value : \"ñ\", type: \"writeInputName\" },\r\n    { value : \"z\", type: \"writeInputName\" },\r\n    { value : \"x\", type: \"writeInputName\" },\r\n    { value : \"c\", type: \"writeInputName\" },\r\n    { value : \"v\", type: \"writeInputName\" },\r\n    { value : \"b\", type: \"writeInputName\" },\r\n    { value : \"n\", type: \"writeInputName\" },\r\n    { value : \"m\", type: \"writeInputName\" },\r\n    { value : \"_\", type: \"writeInputName\" },\r\n    { value : \"??\", type: \"writeInputName\" },\r\n    { value : \"1\", type: \"writeInputName\" },\r\n    { value : \"2\", type: \"writeInputName\" },\r\n    { value : \"3\", type: \"writeInputName\" },\r\n    { value : \"4\", type: \"writeInputName\" },\r\n    { value : \"5\", type: \"writeInputName\" },\r\n    { value : \"6\", type: \"writeInputName\" },\r\n    { value : \"7\", type: \"writeInputName\" },\r\n    { value : \"8\", type: \"writeInputName\" },\r\n    { value : \"9\", type: \"writeInputName\" },\r\n    { value : \"0\", type: \"writeInputName\" },\r\n];\r\n\r\nfunction Keyboard({dispatch, extraWords}) {\r\n    return (\r\n        buttonLetters.concat(extraWords).map(({ type, value, Icon }) => {\r\n            return (\r\n                <Col key={value}>\r\n                    <Button\r\n                        size=\"large\"\r\n                        style={{ minWidth: '70px', height: '100%' }}\r\n                        type=\"primary\" onClick={() => dispatch({ type, value })} >\r\n                        {!!value ? value : <Icon />}\r\n                    </Button>\r\n                </Col>\r\n            );\r\n        })\r\n    )\r\n}\r\n\r\nexport default function Name({dispatch, state}) {\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    const players_param = urlParams.get('players') ? urlParams.get('players')  : null;\r\n    const players = players_param?.split(\"-\")?.map( ply => ({ value : ply, type: \"writeInputName\" })) ?? [];\r\n\r\n    return <>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col>\r\n                    <Statistic\r\n                        style={{ margin : 10}}\r\n                        value={\"Name: \" + state.inputName}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[8, 8]}>\r\n                <Keyboard extraWords={players} dispatch={dispatch} />\r\n            </Row>\r\n        </>\r\n}","import React, {useState} from 'react';\r\n\r\nimport { Button, Steps } from 'antd';\r\n\r\nimport { DeleteOutlined, RollbackOutlined } from '@ant-design/icons';\r\n\r\nimport Initiative from '../Initiative';\r\nimport HitPoints from '../HitPoints';\r\nimport Name from '../Name';\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n    {\r\n        title: 'Name',\r\n    },\r\n    {\r\n        title: 'Initiative',\r\n    },\r\n    {\r\n        title: 'Hit Points',\r\n    },\r\n];\r\n\r\nexport default function AddCharacter({state, dispatch}) {\r\n    const [current, setCurrent] = useState(0);\r\n    return (\r\n        <>\r\n           <Steps current={current}>\r\n                            {steps.map(item => (\r\n                                <Step key={item.title} title={item.title} />\r\n                            ))}\r\n                        </Steps>\r\n                        {\r\n                            current === 1 && <Initiative state={state} dispatch={dispatch} />\r\n                        }\r\n                        {\r\n                            current === 0 && <Name state={state} dispatch={dispatch} />\r\n                        }\r\n                        {\r\n                            current === 2 && <HitPoints state={state} dispatch={dispatch} />\r\n                        }\r\n                        <div className=\"steps-action\">\r\n                            {\r\n                                current === 0 &&\r\n                                <Button\r\n                                    danger\r\n                                    style={{width: '100px'}}\r\n                                    type=\"primary\" onClick={() => dispatch({ type: 'deleteInputName' })} >\r\n                                    <RollbackOutlined />\r\n                                </Button>\r\n                            }\r\n                            {\r\n                                current === 1 &&\r\n                                <Button\r\n                                    danger\r\n                                    style={{width: '100px'}}\r\n                                    type=\"primary\" onClick={() => dispatch({ type: 'deleteInputInitiative' })} >\r\n                                    <DeleteOutlined />\r\n                                </Button>\r\n                            }\r\n                            {\r\n                                current === 2 &&\r\n                                <Button\r\n                                    danger\r\n                                    style={{width: '100px'}}\r\n                                    type=\"primary\" onClick={() => dispatch({ type: 'deleteInputHitpoints' })} >\r\n                                    <DeleteOutlined />\r\n                                </Button>\r\n                            }\r\n\r\n                            {current > 0 && (\r\n                                <Button onClick={() => setCurrent(current - 1)}>\r\n                                    Previous\r\n                                </Button>\r\n                            )}\r\n                            {current < steps.length - 1 && (\r\n                                <Button type=\"primary\" onClick={() => setCurrent(current + 1)}>\r\n                                    Next\r\n                                </Button>\r\n                            )}\r\n\r\n                            {current === steps.length - 1 && (\r\n                                <Button type=\"primary\" danger onClick={() => { setCurrent(0); dispatch({ type: 'addInitiative', monster: true }) }}>\r\n                                    Create as a Monster\r\n                                </Button>\r\n                            )}\r\n                            {current === steps.length - 1 && (\r\n                                <Button type=\"primary\" onClick={() => { setCurrent(0); dispatch({ type: 'addInitiative', monster: false }) }}>\r\n                                    Create as a Player\r\n                                </Button>\r\n                            )}\r\n                        </div> \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Button, Row, Col, Modal } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nconst { confirm } = Modal;\r\n\r\nexport default function Settings({dispatch}) {\r\n    return (\r\n        <Row gutter={[8, 8]}>\r\n            <Col span={8}>\r\n                <Button\r\n                    size=\"large\"\r\n                    danger\r\n                    type=\"primary\" onClick={() => {\r\n                        confirm({\r\n                            title: `Do you want to delete everything in the store?`,\r\n                            icon: null,\r\n                            onOk() {\r\n                                dispatch({ type: 'deleteAll'});\r\n                            },\r\n                          });\r\n                    }} >\r\n                    <DeleteOutlined /> Delete Store\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n    );\r\n        \r\n}","import React, { useState } from 'react';\r\nimport { Button, Row, Col, Checkbox, Tag } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nconst buttonsHitpoints = [\r\n    { value: 1, type: 'editHitpoints' },\r\n    { value: 2, type: 'editHitpoints' },\r\n    { value: 3, type: 'editHitpoints' },\r\n    { value: 5, type: 'editHitpoints' },\r\n    { value: 10, type: 'editHitpoints' },\r\n    { value: 20, type: 'editHitpoints' },\r\n    { value: 30, type: 'editHitpoints' },\r\n    { value: 50, type: 'editHitpoints' }\r\n];\r\n\r\nconst buttonsConditions = [\r\n    { color: \"grey\" , condition: \"Petrified\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"lime\" , condition: \"Incapacitated\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"gold\" , condition: \"Unconscious\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"orange\" , condition: \"Paralyzed\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"cornflowerblue\" , condition: \"Invisible\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"cyan\" , condition: \"Deafened\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"geekblue\" , condition: \"Blinded\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"blue\" , condition: \"Frightened\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"purple\" , condition: \"Grappled\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"burlywood\" , condition: \"Restrained\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"magenta\" , condition: \"Charmed\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"green\" , condition: \"Poisoned\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"red\" , condition: \"Stunned\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"volcano\" , condition: \"Prone\", add: 'editCondition', remove: 'removeCondition' },\r\n];\r\n\r\nfunction KeyboardConditions({dispatch, conditions}) {\r\n\r\n    return (\r\n        buttonsConditions.map(({ add, remove, condition, color }) => {\r\n                const hasIt = conditions?.find( cond => cond.condition === condition);\r\n                return (\r\n                    <Col span={6} key={condition}>\r\n                        <Tag\r\n                            key={condition}\r\n                            color={'cornflowerblue'}\r\n                            onClick={ () =>  dispatch({ type: hasIt ? remove : add, value: { condition,  color }  })}\r\n                        >\r\n                           {hasIt && <DeleteOutlined /> } {condition}\r\n                        </Tag>\r\n                    </Col>\r\n                );\r\n            })\r\n        \r\n    )\r\n}\r\n\r\n\r\nfunction KeyboardHitpoints({dispatch, isNegative}) {\r\n    return (\r\n        \r\n        buttonsHitpoints.map(({ type, value, Icon }) => {\r\n                if(!type) return <Col span={8} key={\"vacio\"} />;\r\n                return (\r\n                    <Col span={8} key={value}>\r\n                        <Button\r\n                            size=\"large\"\r\n                            style={{ minWidth: '70px', height: '100%' }}\r\n                            type=\"primary\" onClick={() => dispatch({ type, value: isNegative ? -value: value })} >\r\n                            {isNegative && \"- \"}{!!value ? value : <Icon />}\r\n                        </Button>\r\n                    </Col>\r\n                );\r\n            })\r\n        \r\n    )\r\n}\r\n\r\nexport default function HitPointsConditionsManager({dispatch, state}) {\r\n    const [checked, onChange] = useState(true);\r\n    const { conditions, name } = state?.initiatives?.find( ini => ini.id === state.selected) ?? {};\r\n    return <>\r\n            <div className=\"LabelName\"><span className=\"Name\">{name}</span></div>\r\n            <div className=\"LabelName\">Hit Points:</div>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col>\r\n                    <Row gutter={[8, 8]}>\r\n                        <Col span={8} ><Checkbox checked={checked} onChange={({target : {checked: value}}) => onChange(value)}>Minus</Checkbox></Col>\r\n                        <KeyboardHitpoints dispatch={dispatch} isNegative={checked} />\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            <div className=\"LabelName\">Conditions:</div>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col>\r\n                    <Row gutter={[8, 8]}>\r\n                        <KeyboardConditions dispatch={dispatch} conditions={conditions} />\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n}\r\n","import React, { useEffect, useReducer, useState } from 'react';\r\nimport { Row, Col, Tabs } from 'antd';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport CharactersList from './CharactersList';\r\nimport AddCharacter from './AddCharacter';\r\nimport Settings from './Settings';\r\nimport HitPointsConditionsManager from './HitPointsConditionsManager';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'addInitiative': {\r\n            const character = {\r\n                value: state.inputInitiative ?? 0,\r\n                name: state.inputName ?? '',\r\n                hitpoints: state.inputHitpoints,\r\n                id: Date.now(),\r\n                monster: action.monster,\r\n                conditions: []\r\n            };\r\n            const initiatives = [...state.initiatives, character].sort((a, b) => b.value - a.value);\r\n            return { ...state, initiatives, inputInitiative: 0, inputName: '', inputHitpoints: 0 };\r\n        }\r\n        case 'deleteAll': {\r\n            return { initiatives: [], selected: null, inputInitiative: 0, inputName: '', inputHitpoints: 0 };\r\n        }\r\n        case 'sortInitiatives': {\r\n            return { ...state, initiatives: action.initiatives };\r\n        }\r\n        case 'removeCharacter': {\r\n            const initiatives = state.initiatives.filter(({ id }) => id !== action.value);\r\n            return { ...state, initiatives, selected: state.selected === action.value ? null : state.selected};\r\n        }\r\n        case 'writeInputInitiative': {\r\n            const inputInitiative = parseInt(state.inputInitiative + action.value);\r\n            return { ...state, inputInitiative };\r\n        }\r\n        case 'writeInputName': {\r\n            const inputName = state.inputName + action.value;\r\n            return { ...state, inputName };\r\n        }\r\n        case 'writeInputHitpoints': {\r\n            const inputHitpoints = parseInt(state.inputHitpoints + action.value);\r\n            return { ...state, inputHitpoints };\r\n        }\r\n        case 'deleteInputInitiative': {\r\n            return { ...state, inputInitiative: 0 };\r\n        }\r\n        case 'deleteInputHitpoints': {\r\n            return { ...state, inputHitpoints: 0 };\r\n        }\r\n        case 'deleteInputName': {\r\n            return { ...state, inputName: state?.inputName?.slice(0, -1) ?? '' };\r\n        }\r\n        case 'negativeInputInitiative': {\r\n            return { ...state, inputInitiative: -state.inputInitiative };\r\n        }\r\n        case 'next': {\r\n            return { \r\n                ...state,\r\n                initiatives: state.initiatives.slice(1).concat(state.initiatives.slice(0, 1))\r\n            };\r\n        }\r\n        case 'back': {\r\n            return {\r\n                ...state,\r\n                initiatives: state.initiatives.slice(-1).concat(state.initiatives.slice(0, -1))\r\n            };\r\n        }\r\n        case 'select': {\r\n            const character = state.initiatives.find(({ id }) => id === action.value);\r\n            return { \r\n                ...state,\r\n                selected: character.id,\r\n                inputInitiative: character?.value,\r\n                inputName: character?.name,\r\n                inputHitpoints: character?.hitpoints\r\n            };\r\n        }\r\n        case 'editHitpoints': {\r\n            const initiatives = state.initiatives.map(ini => {\r\n                if (ini.id === state.selected) {\r\n                    const copy = cloneDeep(ini);\r\n                    copy.hitpoints = copy.hitpoints + action.value;\r\n                    return copy;\r\n                }\r\n                return ini;\r\n            })\r\n            return { ...state, initiatives };\r\n        }\r\n        case 'editCondition': {\r\n            const initiatives = state.initiatives.map(ini => {\r\n                if (ini.id === state.selected) {\r\n                    const copy = cloneDeep(ini);\r\n                    copy.conditions.push(action.value);\r\n                    return copy;\r\n                }\r\n                return ini;\r\n            })\r\n            return { ...state, initiatives };\r\n        }\r\n        case 'removeCondition': {\r\n            const initiatives = state.initiatives.map(ini => {\r\n                if (ini.id === state.selected) {\r\n                    const copy = cloneDeep(ini);\r\n                    copy.conditions = copy.conditions.filter( cond => cond.condition !== action.value.condition);\r\n                    return copy;\r\n                }\r\n                return ini;\r\n            })\r\n            return { ...state, initiatives };\r\n        }\r\n        case 'clean': {\r\n            return { ...state, inputInitiative: 0, inputName: '', inputHitpoints: 0, selected: null };\r\n        }\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\n\r\nexport default function App({storedState, initialState}) {\r\n    const [state, dispatch] = useReducer(reducer, storedState ?? initialState);\r\n    const [activeTab, setTab] = useState(\"2\");\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"storedState\", JSON.stringify(state))\r\n    }, [state]);\r\n\r\n    useEffect(() => {\r\n        if(!state.selected){\r\n            setTab(\"2\");\r\n        }\r\n    }, [state.selected]);\r\n\r\n    return (\r\n        <Row gutter={[16, 16]} style={{ width: \"100%\", height: \"100%\" }}>\r\n            <Col span={activeTab === \"2\" ? 8 : 14} >\r\n                <CharactersList state={state} dispatch={dispatch} wider={activeTab === \"1\"} />\r\n            </Col>\r\n            <Col  span={activeTab === \"2\" ? 16 : 10} >\r\n                <Tabs onChange={setTab} activeKey={activeTab}>\r\n                    <TabPane tab=\"Add Character\" key=\"2\">\r\n                        <AddCharacter state={state} dispatch={dispatch} />\r\n                    </TabPane>\r\n                    <TabPane disabled={!state.selected} tab=\"Character Manager\" key=\"1\">\r\n                        <HitPointsConditionsManager state={state} dispatch={dispatch} />\r\n                    </TabPane>\r\n                    <TabPane tab={<> <SettingOutlined /> Settings</>} key=\"3\">\r\n                        <Settings state={state} dispatch={dispatch} />\r\n                    </TabPane>\r\n                </Tabs>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './App';\n\nimport './App.css';\n\nconst initialState = { initiatives: [], selected: null, inputInitiative: 0, inputName: '', inputHitpoints: 0 };\n\ntry {\n    const string_state = localStorage.getItem(\"storedState\");\n    const state = string_state ? JSON.parse(string_state) : initialState;\n    state.selected = null;\n    ReactDOM.render(<App storedState={state} initialState={initialState} />, document.getElementById('root'));\n} catch (error) {\n    ReactDOM.render(<App initialState={initialState}  />, document.getElementById('root'));\n}\n\n"],"sourceRoot":""}