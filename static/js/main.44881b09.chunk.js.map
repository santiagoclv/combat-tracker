{"version":3,"sources":["CharactersList/index.js","Initiative/index.js","HitPoints/index.js","Name/index.js","AddCharacter/index.js","HitPointsConditionsManager/index.js","App.js","index.js"],"names":["confirm","Modal","DragHandle","sortableHandle","MenuOutlined","style","width","cursor","color","SortableItem","sortableElement","props","SortableContainer","sortableContainer","CharacterList","initiatives","state","dispatch","wider","columns","useMemo","fields","dataIndex","className","render","title","name","monster","fontWeight","key","push","hitpoints","tags","display","flexDirection","map","condition","id","DeleteOutlined","onClick","icon","onOk","type","value","onSortEnd","oldIndex","newIndex","newInitiatives","arrayMove","concat","filter","el","height","span","size","maxWidth","disabled","length","maxHeight","overflow","overflowX","pagination","dataSource","rowKey","rowSelection","onChange","components","body","wrapper","useDragHandle","helperClass","row","restProps","index","findIndex","x","buttons","Icon","LineOutlined","Keyboard","danger","minWidth","Initiative","gutter","justify","margin","inputInitiative","precision","HitPoints","inputHitpoints","buttonLetters","extraWords","Name","queryString","window","location","search","urlParams","URLSearchParams","players_param","get","players","split","ply","inputName","Step","Steps","steps","AddCharacter","useState","current","setCurrent","item","buttonsHitpoints","buttonsConditions","add","remove","KeyboardConditions","conditions","hasIt","find","cond","KeyboardHitpoints","isNegative","HitPointsConditionsManager","checked","ini","selected","target","TabPane","Tabs","initialState","reducer","action","initiative","Date","now","sort","a","b","parseInt","slice","copy","cloneDeep","Error","App","useReducer","activeTab","setTab","useEffect","CharactersList","activeKey","tab","ReactDOM","document","getElementById"],"mappings":"8UAOQA,EAAYC,IAAZD,QAEFE,EAAaC,aAAe,kBAC9B,cAACC,EAAA,EAAD,CAAcC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,UAAWC,MAAO,aAG9DC,EAAeC,aAAgB,SAAAC,GAAK,OAAI,kCAAQA,OAChDC,EAAoBC,aAAkB,SAAAF,GAAK,OAAI,qCAAWA,OAqIjDG,EAlIO,SAAC,GAAiD,IAAtCC,EAAqC,EAA9CC,MAASD,YAAeE,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAEjDC,EAAUC,mBAAQ,WACpB,IAAMC,EAAS,CACX,CACIC,UAAW,OACXhB,MAAO,GACPiB,UAAW,eACXC,OAAQ,kBAAM,cAACtB,EAAD,MAElB,CACIuB,MAAO,OACPnB,MAAO,OACPiB,UAAW,eACXC,OAAQ,gBAAEE,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAAR,OACJ,sBAAMtB,MAAO,CAAEuB,WAAY,IAAMpB,MAAOmB,EAAU,MAAQ,SAA1D,SAAuED,MAG/E,CACID,MAAO,OACPI,IAAK,QACLP,UAAW,UAwCnB,OApCGJ,IACCG,EAAOS,KAAK,CACRL,MAAO,KACPD,OAAQ,gBAAEO,EAAF,EAAEA,UAAWJ,EAAb,EAAaA,QAAb,OACJ,sBAAMtB,MAAO,CAAEuB,WAAY,IAAMpB,MAAOuB,EAAY,IAAMJ,EAAU,QAAU,OAA9E,SAAuFI,OAG/FV,EAAOS,KAAK,CACRL,MAAO,aACPH,UAAW,aACXO,IAAK,aACLL,OAAQ,SAAAQ,GAAI,OACR,qBAAK3B,MAAO,CAAE4B,QAAS,OAAQC,cAAe,UAA9C,SACGF,EAAKG,KAAK,gBAAE3B,EAAF,EAAEA,MAAO4B,EAAT,EAASA,UAAT,OACP,cAAC,IAAD,CAAK5B,MAAOA,EAAZ,SACG4B,GADqBA,WAOtCf,EAAOS,KAAK,CACRD,IAAK,KACLL,OAAQ,gBAAEa,EAAF,EAAEA,GAAIX,EAAN,EAAMA,KAAN,OACN,cAACY,EAAA,EAAD,CAAgBC,QAAS,WACvBvC,EAAQ,CACJyB,MAAM,yBAAD,cAA2BC,QAA3B,IAA2BA,IAAQ,GAAnC,KACLc,KAAM,KACNC,KAHI,WAIAxB,EAAS,CAAEyB,KAAM,mBAAoBC,MAAON,cAOzDhB,IACR,CAACH,EAAOD,IAEL2B,EAAY,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC3B,GAAID,IAAaC,EAAU,CACvB,IAAMC,EAAiBC,YAAU,GAAGC,OAAOlC,GAAc8B,EAAUC,GAAUI,QAAO,SAAAC,GAAE,QAAMA,KAC5FlC,EAAS,CAAEyB,KAAM,kBAAmB3B,YAAagC,MAkBzD,OACI,qCACI,eAAC,IAAD,CAAK1C,MAAO,CAAE+C,OAAQ,QAAtB,UACI,cAAC,IAAD,CAAKC,KAAM,GAAX,SACI,cAAC,IAAD,CACIC,KAAK,QACLjD,MAAO,CAAEkD,SAAU,QAASH,OAAQ,QACpCV,KAAK,UACLc,SAAUzC,EAAY0C,OAAS,EAC/BlB,QAAS,kBAAMtB,EAAS,CAAEyB,KAAM,UALpC,oBASJ,cAAC,IAAD,CAAKW,KAAM,GAAIhD,MAAO,CAAE4B,QAAS,OAAQC,cAAe,eAAxD,SACI,cAAC,IAAD,CACIoB,KAAK,QACLjD,MAAO,CAAEkD,SAAU,QAASH,OAAQ,QACpCV,KAAK,UACLc,SAAUzC,EAAY0C,OAAS,EAC/BlB,QAAS,kBAAMtB,EAAS,CAAEyB,KAAM,UALpC,uBAUR,cAAC,IAAD,CACIrC,MAAO,CAAEqD,UAAW,qBAAsBC,SAAU,SAAUC,UAAW,UACzEC,YAAY,EACZC,WAAY/C,EACZI,QAASA,EACT4C,OAAO,KACPC,aAAc,CACVtB,KAAM,QACNuB,SAAU,gBAAE5B,EAAF,2BAAUpB,EAAS,CAAEyB,KAAM,SAAUC,MAAON,MAE1D6B,WAAY,CACRC,KAAM,CACFC,QA7CO,SAAAzD,GAAK,OAC5B,cAACC,EAAD,aACIyD,eAAa,EACbC,YAAY,eACZ1B,UAAWA,GACPjC,KAyCQ4D,IAnDK,SAAC,GAAuC,EAArChD,UAAqC,EAA1BlB,MAA2B,IAAjBmE,EAAgB,qCACvDC,EAAQ1D,EAAY2D,WAAU,SAAAC,GAAC,OAAIA,EAAEtC,KAAOmC,EAAU,mBAC5D,OAAO,cAAC/D,EAAD,aAAcgE,MAAOA,GAAWD,a,2BCrFzCI,EAAU,CACZ,CAAEjC,MAAO,IAAKD,KAAM,wBACpB,CAAEC,MAAO,IAAKD,KAAM,wBACpB,CAAEC,MAAO,IAAKD,KAAM,wBACpB,CAAEC,MAAO,IAAKD,KAAM,wBACpB,CAAEC,MAAO,IAAKD,KAAM,wBACpB,CAAEC,MAAO,IAAKD,KAAM,wBACpB,CAAEC,MAAO,IAAKD,KAAM,wBACpB,CAAEC,MAAO,IAAKD,KAAM,wBACpB,CAAEC,MAAO,IAAKD,KAAM,wBACpB,CAAEmC,KAAMC,IAAcpC,KAAM,2BAC5B,CAAEC,MAAO,IAAKD,KAAM,yBAIxB,SAASqC,EAAT,GAA+B,IAAZ9D,EAAW,EAAXA,SACf,OAEQ2D,EAAQzC,KAAI,YAAoC,IAAjCO,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,MAAOkC,EAAmB,EAAnBA,KAAMG,EAAa,EAAbA,OAC9B,OACI,cAAC,IAAD,CAAK3B,KAAM,EAAX,SACI,cAAC,IAAD,CACI2B,OAAQA,EACR1B,KAAK,QACLjD,MAAO,CAAE4E,SAAU,OAAQ7B,OAAQ,QACnCV,KAAK,UAAUH,QAAS,kBAAMtB,EAAS,CAAEyB,OAAMC,WAJnD,SAKOA,GAAgB,cAACkC,EAAD,OANRnC,EAAOC,MAe/B,SAASuC,EAAT,GAAwC,IAAnBjE,EAAkB,EAAlBA,SAAUD,EAAQ,EAARA,MAC1C,OAAO,qCACC,cAAC,IAAD,CAAKmE,OAAQ,CAAC,GAAI,IAAKC,QAAQ,SAA/B,SACI,cAAC,IAAD,CAAK/B,KAAM,EAAX,SACI,cAAC,IAAD,CACIhD,MAAO,CAAEgF,OAAS,IAClB1C,MAAO3B,EAAMsE,gBACbC,UAAW,QAIvB,cAAC,IAAD,CAAKJ,OAAQ,CAAC,EAAG,GAAjB,SACI,cAACJ,EAAD,CAAU9D,SAAUA,SChDpC,IAAM2D,EAAU,CACZ,CAAEjC,MAAO,IAAKD,KAAM,uBACpB,CAAEC,MAAO,IAAKD,KAAM,uBACpB,CAAEC,MAAO,IAAKD,KAAM,uBACpB,CAAEC,MAAO,IAAKD,KAAM,uBACpB,CAAEC,MAAO,IAAKD,KAAM,uBACpB,CAAEC,MAAO,IAAKD,KAAM,uBACpB,CAAEC,MAAO,IAAKD,KAAM,uBACpB,CAAEC,MAAO,IAAKD,KAAM,uBACpB,CAAEC,MAAO,IAAKD,KAAM,uBACpB,GACA,CAAEC,MAAO,IAAKD,KAAM,wBAIxB,SAASqC,EAAT,GAA+B,IAAZ9D,EAAW,EAAXA,SACf,OAEQ2D,EAAQzC,KAAI,YAAoC,IAAjCO,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,MAAOkC,EAAmB,EAAnBA,KAAMG,EAAa,EAAbA,OAC9B,OAAItC,EAEA,cAAC,IAAD,CAAKW,KAAM,EAAX,SACI,cAAC,IAAD,CACI2B,OAAQA,EACR1B,KAAK,QACLjD,MAAO,CAAE4E,SAAU,OAAQ7B,OAAQ,QACnCV,KAAK,UAAUH,QAAS,kBAAMtB,EAAS,CAAEyB,OAAMC,WAJnD,SAKOA,GAAgB,cAACkC,EAAD,OAN3B,OAAmBlC,QAAnB,IAAmBA,IAASD,GAFf,cAAC,IAAD,CAAKW,KAAM,GAAQ,YAiBrC,SAASmC,EAAT,GAAuC,IAAnBvE,EAAkB,EAAlBA,SAAUD,EAAQ,EAARA,MACzC,OAAO,qCACC,cAAC,IAAD,CAAKmE,OAAQ,CAAC,GAAI,IAAKC,QAAQ,SAA/B,SACI,cAAC,IAAD,CAAK/B,KAAM,EAAX,SACI,cAAC,IAAD,CACIhD,MAAO,CAAEgF,OAAS,IAClB1C,MAAO3B,EAAMyE,eACbF,UAAW,QAIvB,cAAC,IAAD,CAAKJ,OAAQ,CAAC,EAAG,GAAjB,SACI,cAAC,EAAD,CAAUlE,SAAUA,SChDpC,IAAMyE,EAAgB,CAClB,CAAE/C,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,OAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,KAAMD,KAAM,kBACtB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,kBACrB,CAAEC,MAAQ,IAAKD,KAAM,mBAGzB,SAASqC,EAAT,GAA2C,IAAxB9D,EAAuB,EAAvBA,SAAU0E,EAAa,EAAbA,WACzB,OACID,EAAczC,OAAO0C,GAAYxD,KAAI,YAA4B,IAAzBO,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOkC,EAAW,EAAXA,KACjD,OACI,cAAC,IAAD,UACI,cAAC,IAAD,CACIvB,KAAK,QACLjD,MAAO,CAAE4E,SAAU,OAAQ7B,OAAQ,QACnCV,KAAK,UAAUH,QAAS,kBAAMtB,EAAS,CAAEyB,OAAMC,WAHnD,SAIOA,GAAgB,cAACkC,EAAD,OALjBlC,MAaX,SAASiD,EAAT,GAAkC,IAAD,IAAlB3E,EAAkB,EAAlBA,SAAUD,EAAQ,EAARA,MAC9B6E,EAAcC,OAAOC,SAASC,OAC9BC,EAAY,IAAIC,gBAAgBL,GAChCM,EAAgBF,EAAUG,IAAI,WAAaH,EAAUG,IAAI,WAAc,KACvEC,EAAO,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAeG,MAAM,YAAxB,aAAG,EAA2BnE,KAAK,SAAAoE,GAAG,MAAK,CAAE5D,MAAQ4D,EAAK7D,KAAM,4BAAhE,QAAwF,GAErG,OAAO,qCACC,cAAC,IAAD,CAAKyC,OAAQ,CAAC,GAAI,IAAKC,QAAQ,SAA/B,SACI,cAAC,IAAD,CAAK/B,KAAM,EAAX,SACI,cAAC,IAAD,CACIhD,MAAO,CAAEgF,OAAS,IAClB1C,MAAO3B,EAAMwF,gBAIzB,cAAC,IAAD,CAAKrB,OAAQ,CAAC,EAAG,GAAjB,SACI,cAAC,EAAD,CAAUQ,WAAYU,EAASpF,SAAUA,S,ICrEjDwF,EAASC,IAATD,KAEFE,EAAQ,CACV,CACIlF,MAAO,QAEX,CACIA,MAAO,cAEX,CACIA,MAAO,eAIA,SAASmF,EAAT,GAA0C,IAAnB5F,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SAAW,EACtB4F,mBAAS,GADa,mBAC7CC,EAD6C,KACpCC,EADoC,KAEpD,OACI,qCACG,cAAC,IAAD,CAAOD,QAASA,EAAhB,SACkBH,EAAMxE,KAAI,SAAA6E,GAAI,OACX,cAACP,EAAD,CAAuBhF,MAAOuF,EAAKvF,OAAxBuF,EAAKvF,YAIR,IAAZqF,GAAiB,cAAC5B,EAAD,CAAYlE,MAAOA,EAAOC,SAAUA,IAGzC,IAAZ6F,GAAiB,cAAClB,EAAD,CAAM5E,MAAOA,EAAOC,SAAUA,IAGnC,IAAZ6F,GAAiB,cAACtB,EAAD,CAAWxE,MAAOA,EAAOC,SAAUA,IAExD,sBAAKM,UAAU,eAAf,UAEoB,IAAZuF,GACA,cAAC,IAAD,CACI9B,QAAM,EACN3E,MAAO,CAACC,MAAO,SACfoC,KAAK,UAAUH,QAAS,kBAAMtB,EAAS,CAAEyB,KAAM,qBAHnD,SAII,cAACJ,EAAA,EAAD,MAIQ,IAAZwE,GACA,cAAC,IAAD,CACI9B,QAAM,EACN3E,MAAO,CAACC,MAAO,SACfoC,KAAK,UAAUH,QAAS,kBAAMtB,EAAS,CAAEyB,KAAM,2BAHnD,SAII,cAACJ,EAAA,EAAD,MAIQ,IAAZwE,GACA,cAAC,IAAD,CACI9B,QAAM,EACN3E,MAAO,CAACC,MAAO,SACfoC,KAAK,UAAUH,QAAS,kBAAMtB,EAAS,CAAEyB,KAAM,0BAHnD,SAII,cAACJ,EAAA,EAAD,MAIPwE,EAAU,GACP,cAAC,IAAD,CAAQvE,QAAS,kBAAMwE,EAAWD,EAAU,IAA5C,sBAIHA,EAAUH,EAAMlD,OAAS,GACtB,cAAC,IAAD,CAAQf,KAAK,UAAUH,QAAS,kBAAMwE,EAAWD,EAAU,IAA3D,kBAKHA,IAAYH,EAAMlD,OAAS,GACxB,cAAC,IAAD,CAAQf,KAAK,UAAUsC,QAAM,EAACzC,QAAS,WAAQwE,EAAW,GAAI9F,EAAS,CAAEyB,KAAM,gBAAiBf,SAAS,KAAzG,0BAIHmF,IAAYH,EAAMlD,OAAS,GACxB,cAAC,IAAD,CAAQf,KAAK,UAAUH,QAAS,WAAQwE,EAAW,GAAI9F,EAAS,CAAEyB,KAAM,gBAAiBf,SAAS,KAAlG,+B,YCpF1BsF,EAAmB,CACrB,CAAEtE,MAAO,EAAGD,KAAM,iBAClB,CAAEC,MAAO,EAAGD,KAAM,iBAClB,CAAEC,MAAO,EAAGD,KAAM,iBAClB,CAAEC,MAAO,EAAGD,KAAM,iBAClB,CAAEC,MAAO,GAAID,KAAM,iBACnB,CAAEC,MAAO,GAAID,KAAM,iBACnB,CAAEC,MAAO,GAAID,KAAM,iBACnB,CAAEC,MAAO,GAAID,KAAM,kBAGjBwE,EAAoB,CACtB,CAAE1G,MAAO,OAAS4B,UAAW,YAAa+E,IAAK,gBAAiBC,OAAQ,mBACxE,CAAE5G,MAAO,OAAS4B,UAAW,gBAAiB+E,IAAK,gBAAiBC,OAAQ,mBAC5E,CAAE5G,MAAO,OAAS4B,UAAW,cAAe+E,IAAK,gBAAiBC,OAAQ,mBAC1E,CAAE5G,MAAO,SAAW4B,UAAW,YAAa+E,IAAK,gBAAiBC,OAAQ,mBAC1E,CAAE5G,MAAO,iBAAmB4B,UAAW,YAAa+E,IAAK,gBAAiBC,OAAQ,mBAClF,CAAE5G,MAAO,OAAS4B,UAAW,WAAY+E,IAAK,gBAAiBC,OAAQ,mBACvE,CAAE5G,MAAO,WAAa4B,UAAW,UAAW+E,IAAK,gBAAiBC,OAAQ,mBAC1E,CAAE5G,MAAO,OAAS4B,UAAW,aAAc+E,IAAK,gBAAiBC,OAAQ,mBACzE,CAAE5G,MAAO,SAAW4B,UAAW,WAAY+E,IAAK,gBAAiBC,OAAQ,mBACzE,CAAE5G,MAAO,YAAc4B,UAAW,aAAc+E,IAAK,gBAAiBC,OAAQ,mBAC9E,CAAE5G,MAAO,UAAY4B,UAAW,UAAW+E,IAAK,gBAAiBC,OAAQ,mBACzE,CAAE5G,MAAO,QAAU4B,UAAW,WAAY+E,IAAK,gBAAiBC,OAAQ,mBACxE,CAAE5G,MAAO,MAAQ4B,UAAW,UAAW+E,IAAK,gBAAiBC,OAAQ,mBACrE,CAAE5G,MAAO,UAAY4B,UAAW,QAAS+E,IAAK,gBAAiBC,OAAQ,oBAG3E,SAASC,EAAT,GAAqD,IAAxBpG,EAAuB,EAAvBA,SAAUqG,EAAa,EAAbA,WAEnC,OACIJ,EAAkB/E,KAAI,YAAwC,IAArCgF,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,OAAQhF,EAAuB,EAAvBA,UAAW5B,EAAY,EAAZA,MACnC+G,EAAK,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAYE,MAAM,SAAAC,GAAI,OAAIA,EAAKrF,YAAcA,KAC3D,OACI,cAAC,IAAD,CAAKiB,KAAM,EAAX,SACI,eAAC,IAAD,CAEI7C,MAAO,iBACP+B,QAAU,kBAAOtB,EAAS,CAAEyB,KAAM6E,EAAQH,EAASD,EAAKxE,MAAO,CAAEP,YAAY5B,YAHjF,UAKI+G,GAAS,cAACjF,EAAA,EAAD,IALb,IAKmCF,IAJ1BA,IAFMA,MAgBvC,SAASsF,EAAT,GAAoD,IAAxBzG,EAAuB,EAAvBA,SAAU0G,EAAa,EAAbA,WAClC,OAEIV,EAAiB9E,KAAI,YAA4B,IAAzBO,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOkC,EAAW,EAAXA,KAC7B,OAAInC,EAEA,cAAC,IAAD,CAAKW,KAAM,EAAX,SACI,eAAC,IAAD,CACIC,KAAK,QACLjD,MAAO,CAAE4E,SAAU,OAAQ7B,OAAQ,QACnCV,KAAK,UAAUH,QAAS,kBAAMtB,EAAS,CAAEyB,OAAMC,MAAOgF,GAAchF,EAAOA,KAH/E,UAIKgF,GAAc,KAAQhF,GAAgB,cAACkC,EAAD,QAL5BlC,GAFN,cAAC,IAAD,CAAKU,KAAM,GAAQ,YAgBrC,SAASuE,EAAT,GAAwD,IAAD,IAAlB3G,EAAkB,EAAlBA,SAAUD,EAAQ,EAARA,MAAQ,EACtC6F,oBAAS,GAD6B,mBAC3DgB,EAD2D,KAClD5D,EADkD,wBAErCjD,QAFqC,IAErCA,GAFqC,UAErCA,EAAOD,mBAF8B,aAErC,EAAoByG,MAAM,SAAAM,GAAG,OAAIA,EAAIzF,KAAOrB,EAAM+G,mBAFb,QAE0B,GAApFT,EAF0D,EAE1DA,WAAY5F,EAF8C,EAE9CA,KACpB,OAAO,qCACC,qBAAKH,UAAU,YAAf,SAA2B,sBAAMA,UAAU,OAAhB,SAAwBG,MACnD,qBAAKH,UAAU,YAAf,yBACA,cAAC,IAAD,CAAK4D,OAAQ,CAAC,GAAI,IAAKC,QAAQ,SAA/B,SACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAKD,OAAQ,CAAC,EAAG,GAAjB,UACI,cAAC,IAAD,CAAK9B,KAAM,EAAX,SAAe,cAAC,IAAD,CAAUwE,QAASA,EAAS5D,SAAU,gBAAqBtB,EAArB,EAAEqF,OAAUH,QAAZ,OAAiC5D,EAAStB,IAAhF,qBACf,cAAC+E,EAAD,CAAmBzG,SAAUA,EAAU0G,WAAYE,WAI/D,qBAAKtG,UAAU,YAAf,yBACA,cAAC,IAAD,CAAK4D,OAAQ,CAAC,GAAI,IAAKC,QAAQ,SAA/B,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKD,OAAQ,CAAC,EAAG,GAAjB,SACI,cAACkC,EAAD,CAAoBpG,SAAUA,EAAUqG,WAAYA,a,ICrFpEW,EAAYC,IAAZD,QAEFE,EAAe,CAAEpH,YAAa,GAAIgH,SAAU,KAAMzC,gBAAiB,EAAGkB,UAAW,GAAIf,eAAgB,GAE3G,SAAS2C,EAAQpH,EAAOqH,GACpB,OAAQA,EAAO3F,MACX,IAAK,gBAAkB,IAAD,IACZ4F,EAAa,CACf3F,MAAK,UAAE3B,EAAMsE,uBAAR,QAA2B,EAChC5D,KAAI,UAAEV,EAAMwF,iBAAR,QAAqB,GACzBzE,UAAWf,EAAMyE,eACjBpD,GAAIkG,KAAKC,MACT7G,QAAS0G,EAAO1G,QAChB2F,WAAY,IAEVvG,EAAc,sBAAIC,EAAMD,aAAV,CAAuBuH,IAAYG,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEhG,MAAQ+F,EAAE/F,SAClF,OAAO,2BAAK3B,GAAZ,IAAmBD,cAAauE,gBAAiB,EAAGkB,UAAW,GAAIf,eAAgB,IAEvF,IAAK,kBACD,OAAO,2BAAKzE,GAAZ,IAAmBD,YAAasH,EAAOtH,cAE3C,IAAK,mBACD,IAAMA,EAAcC,EAAMD,YAAYmC,QAAO,qBAAGb,KAAgBgG,EAAO1F,SAEvE,OAAO,2BAAK3B,GAAZ,IAAmBD,cAAagH,SAAU/G,EAAM+G,WAAaM,EAAO1F,MAAQ,KAAO3B,EAAM+G,WAE7F,IAAK,uBACD,IAAMzC,EAAkBsD,SAAS5H,EAAMsE,gBAAkB+C,EAAO1F,OAChE,OAAO,2BAAK3B,GAAZ,IAAmBsE,oBAEvB,IAAK,iBACD,IAAMkB,EAAYxF,EAAMwF,UAAY6B,EAAO1F,MAC3C,OAAO,2BAAK3B,GAAZ,IAAmBwF,cAEvB,IAAK,sBACD,IAAMf,EAAiBmD,SAAS5H,EAAMyE,eAAiB4C,EAAO1F,OAC9D,OAAO,2BAAK3B,GAAZ,IAAmByE,mBAEvB,IAAK,wBACD,OAAO,2BAAKzE,GAAZ,IAAmBsE,gBAAiB,IAExC,IAAK,uBACD,OAAO,2BAAKtE,GAAZ,IAAmByE,eAAgB,IAEvC,IAAK,kBACD,OAAO,2BAAKzE,GAAZ,IAAmBwF,UAAW,KAElC,IAAK,0BACD,OAAO,2BAAKxF,GAAZ,IAAmBsE,iBAAkBtE,EAAMsE,kBAE/C,IAAK,OACD,OAAO,2BACAtE,GADP,IAEID,YAAaC,EAAMD,YAAY8H,MAAM,GAAG5F,OAAOjC,EAAMD,YAAY8H,MAAM,EAAG,MAGlF,IAAK,OACD,OAAO,2BACA7H,GADP,IAEID,YAAaC,EAAMD,YAAY8H,OAAO,GAAG5F,OAAOjC,EAAMD,YAAY8H,MAAM,GAAI,MAGpF,IAAK,SACD,OAAO,2BAAK7H,GAAZ,IAAmB+G,SAAUM,EAAO1F,QAExC,IAAK,gBACD,IAAM5B,EAAcC,EAAMD,YAAYoB,KAAI,SAAA2F,GACtC,GAAIA,EAAIzF,KAAOrB,EAAM+G,SAAU,CAC3B,IAAMe,EAAOC,IAAUjB,GAEvB,OADAgB,EAAK/G,UAAY+G,EAAK/G,UAAYsG,EAAO1F,MAClCmG,EAEX,OAAOhB,KAEX,OAAO,2BAAK9G,GAAZ,IAAmBD,gBAEvB,IAAK,gBACD,IAAMA,EAAcC,EAAMD,YAAYoB,KAAI,SAAA2F,GACtC,GAAIA,EAAIzF,KAAOrB,EAAM+G,SAAU,CAC3B,IAAMe,EAAOC,IAAUjB,GAEvB,OADAgB,EAAKxB,WAAWxF,KAAKuG,EAAO1F,OACrBmG,EAEX,OAAOhB,KAEX,OAAO,2BAAK9G,GAAZ,IAAmBD,gBAEvB,IAAK,kBACD,IAAMA,EAAcC,EAAMD,YAAYoB,KAAI,SAAA2F,GACtC,GAAIA,EAAIzF,KAAOrB,EAAM+G,SAAU,CAC3B,IAAMe,EAAOC,IAAUjB,GAEvB,OADAgB,EAAKxB,WAAawB,EAAKxB,WAAWpE,QAAQ,SAAAuE,GAAI,OAAIA,EAAKrF,YAAciG,EAAO1F,MAAMP,aAC3E0G,EAEX,OAAOhB,KAEX,OAAO,2BAAK9G,GAAZ,IAAmBD,gBAEvB,IAAK,QACD,OAAO,2BAAKC,GAAZ,IAAmBsE,gBAAiB,EAAGkB,UAAW,GAAIf,eAAgB,EAAGsC,SAAU,OAEvF,QACI,MAAM,IAAIiB,OAIP,SAASC,IAAO,IAAD,EACAC,qBAAWd,EAASD,GADpB,mBACnBnH,EADmB,KACZC,EADY,OAEE4F,mBAAS,KAFX,mBAEnBsC,EAFmB,KAERC,EAFQ,KAY1B,OARAC,qBAAU,WACFrI,EAAM+G,SAGNqB,EAAO,KAFPA,EAAO,OAIZ,CAACpI,EAAM+G,WAGN,eAAC,IAAD,CAAK5C,OAAQ,CAAC,GAAI,IAAK9E,MAAO,CAAEC,MAAO,OAAQ8C,OAAQ,QAAvD,UACI,cAAC,IAAD,CAAKC,KAAoB,MAAd8F,EAAoB,EAAI,GAAnC,SACI,cAACG,EAAD,CAAgBtI,MAAOA,EAAOC,SAAUA,EAAUC,MAAqB,MAAdiI,MAE7D,cAAC,IAAD,CAAM9F,KAAoB,MAAd8F,EAAoB,GAAK,GAArC,SACI,eAAC,IAAD,CAAMlF,SAAUmF,EAAQG,UAAWJ,EAAnC,UACI,cAAClB,EAAD,CAASuB,IAAI,gBAAb,SACI,cAAC5C,EAAD,CAAc5F,MAAOA,EAAOC,SAAUA,KADT,KAGjC,cAACgH,EAAD,CAASzE,UAAWxC,EAAM+G,SAAUyB,IAAI,oBAAxC,SACI,cAAC5B,EAAD,CAA4B5G,MAAOA,EAAOC,SAAUA,KADQ,a,OChIpFwI,IAASjI,OAAO,cAACyH,EAAD,IAASS,SAASC,eAAe,W","file":"static/js/main.44881b09.chunk.js","sourcesContent":["import React, {useMemo} from 'react';\r\nimport { Table, Tag, Modal, Row, Col, Button } from 'antd';\r\nimport { sortableContainer, sortableElement, sortableHandle, arrayMove } from 'react-sortable-hoc';\r\n\r\nimport { DeleteOutlined, MenuOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst DragHandle = sortableHandle(() => (\r\n    <MenuOutlined style={{ width: '15px' ,cursor: 'pointer', color: '#999' }} />\r\n));\r\n\r\nconst SortableItem = sortableElement(props => <tr {...props} />);\r\nconst SortableContainer = sortableContainer(props => <tbody {...props} />);\r\n\r\n\r\nconst CharacterList = ({ state: { initiatives }, dispatch, wider }) => {\r\n\r\n    const columns = useMemo(() => {\r\n        const fields = [\r\n            {\r\n                dataIndex: 'sort',\r\n                width: 15,\r\n                className: 'drag-visible',\r\n                render: () => <DragHandle />,\r\n            },\r\n            {\r\n                title: 'Name',\r\n                width: '50px',\r\n                className: 'drag-visible',\r\n                render: ({name, monster}) => (\r\n                    <span style={{ fontWeight: 500 , color: monster ? 'red' : 'green'  }}>{name}</span>\r\n                )\r\n            },\r\n            {\r\n                title: 'Init',\r\n                key: 'value',\r\n                dataIndex: 'value',\r\n            }\r\n        ];\r\n\r\n        if(wider){\r\n            fields.push({\r\n                title: 'HP',\r\n                render: ({hitpoints, monster}) => (\r\n                    <span style={{ fontWeight: 500 , color: hitpoints > 0 || !monster ? 'green' : 'red'}}>{hitpoints}</span>\r\n                )\r\n            });\r\n            fields.push({\r\n                title: 'Conditions',\r\n                dataIndex: 'conditions',\r\n                key: 'conditions',\r\n                render: tags => (\r\n                    <div style={{ display: 'flex', flexDirection: 'column'}}>\r\n                      {tags.map( ({color, condition}) => (\r\n                          <Tag color={color} key={condition}>\r\n                            {condition}\r\n                          </Tag>\r\n                        ))}\r\n                    </div>\r\n                  ),\r\n            });\r\n            fields.push({\r\n                key: 'id',\r\n                render: ({id, name}) => (\r\n                  <DeleteOutlined onClick={() => {\r\n                    confirm({\r\n                        title: `Do you Want to delete ${name ?? ''}?`,\r\n                        icon: null,\r\n                        onOk() {\r\n                            dispatch({ type: 'removeInitiative', value: id});\r\n                        },\r\n                      });\r\n                    }} />\r\n                ),\r\n              },);\r\n        }\r\n        return fields;\r\n    }, [wider, dispatch]);\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex }) => {\r\n        if (oldIndex !== newIndex) {\r\n            const newInitiatives = arrayMove([].concat(initiatives), oldIndex, newIndex).filter(el => !!el);\r\n            dispatch({ type: \"sortInitiatives\", initiatives: newInitiatives });\r\n        }\r\n    };\r\n\r\n    const DraggableBodyRow = ({ className, style, ...restProps }) => {\r\n        const index = initiatives.findIndex(x => x.id === restProps['data-row-key']);\r\n        return <SortableItem index={index} {...restProps} />;\r\n    };\r\n\r\n    const DraggableContainer = props => (\r\n        <SortableContainer\r\n            useDragHandle\r\n            helperClass=\"row-dragging\"\r\n            onSortEnd={onSortEnd}\r\n            {...props}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Row style={{ height: '40px' }} >\r\n                <Col span={12}>\r\n                    <Button\r\n                        size=\"large\"\r\n                        style={{ maxWidth: '150px', height: '100%' }}\r\n                        type=\"primary\"\r\n                        disabled={initiatives.length < 2}\r\n                        onClick={() => dispatch({ type: \"back\" })} >\r\n                        Back\r\n                     </Button>\r\n                </Col>\r\n                <Col span={12} style={{ display: 'flex', flexDirection: 'row-reverse' }}>\r\n                    <Button\r\n                        size=\"large\"\r\n                        style={{ maxWidth: '150px', height: '100%' }}\r\n                        type=\"primary\"\r\n                        disabled={initiatives.length < 2}\r\n                        onClick={() => dispatch({ type: \"next\" })} >\r\n                        Next\r\n                         </Button>\r\n                </Col>\r\n            </Row>\r\n            <Table\r\n                style={{ maxHeight: 'calc(100vh - 40px)', overflow: 'scroll', overflowX: 'hidden' }}\r\n                pagination={false}\r\n                dataSource={initiatives}\r\n                columns={columns}\r\n                rowKey=\"id\"\r\n                rowSelection={{\r\n                    type: 'radio',\r\n                    onChange: ([id]) => dispatch({ type: \"select\", value: id }),\r\n                }}\r\n                components={{\r\n                    body: {\r\n                        wrapper: DraggableContainer,\r\n                        row: DraggableBodyRow,\r\n                    },\r\n                }}\r\n            />\r\n\r\n        </>\r\n    );\r\n}\r\nexport default CharacterList;\r\n","import React from 'react';\r\n\r\nimport { LineOutlined  } from '@ant-design/icons';\r\nimport { Button, Row, Col, Statistic } from 'antd';\r\n\r\nconst buttons = [\r\n    { value: \"1\", type: 'writeInputInitiative' },\r\n    { value: \"2\", type: 'writeInputInitiative' },\r\n    { value: \"3\", type: 'writeInputInitiative' },\r\n    { value: \"4\", type: 'writeInputInitiative' },\r\n    { value: \"5\", type: 'writeInputInitiative' },\r\n    { value: \"6\", type: 'writeInputInitiative' },\r\n    { value: \"7\", type: 'writeInputInitiative' },\r\n    { value: \"8\", type: 'writeInputInitiative' },\r\n    { value: \"9\", type: 'writeInputInitiative' },\r\n    { Icon: LineOutlined, type: 'negativeInputInitiative' },\r\n    { value: \"0\", type: 'writeInputInitiative' },\r\n];\r\n\r\n\r\nfunction Keyboard({dispatch}) {\r\n    return (\r\n        \r\n            buttons.map(({ type, value, Icon, danger }) => {\r\n                return (\r\n                    <Col span={8} key={type + value}>\r\n                        <Button\r\n                            danger={danger}\r\n                            size=\"large\"\r\n                            style={{ minWidth: '70px', height: '100%' }}\r\n                            type=\"primary\" onClick={() => dispatch({ type, value })} >\r\n                            {!!value ? value : <Icon />}\r\n                        </Button>\r\n                    </Col>\r\n                );\r\n            })\r\n        \r\n    )\r\n}\r\n\r\nexport default function Initiative({dispatch, state}) {\r\n    return <>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col span={8} >\r\n                    <Statistic\r\n                        style={{ margin : 10}}\r\n                        value={state.inputInitiative}\r\n                        precision={0}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[8, 8]}>\r\n                <Keyboard dispatch={dispatch} />\r\n            </Row>\r\n        </>\r\n}\r\n","import React from 'react';\r\n\r\nimport { Button, Row, Col, Statistic } from 'antd';\r\n\r\nconst buttons = [\r\n    { value: \"1\", type: 'writeInputHitpoints' },\r\n    { value: \"2\", type: 'writeInputHitpoints' },\r\n    { value: \"3\", type: 'writeInputHitpoints' },\r\n    { value: \"4\", type: 'writeInputHitpoints' },\r\n    { value: \"5\", type: 'writeInputHitpoints' },\r\n    { value: \"6\", type: 'writeInputHitpoints' },\r\n    { value: \"7\", type: 'writeInputHitpoints' },\r\n    { value: \"8\", type: 'writeInputHitpoints' },\r\n    { value: \"9\", type: 'writeInputHitpoints' },\r\n    { },\r\n    { value: \"0\", type: 'writeInputHitpoints' },\r\n];\r\n\r\n\r\nfunction Keyboard({dispatch}) {\r\n    return (\r\n        \r\n            buttons.map(({ type, value, Icon, danger }) => {\r\n                if(!type) return <Col span={8} key={\"vacio\"} />;\r\n                return (\r\n                    <Col span={8} key={value ?? type}>\r\n                        <Button\r\n                            danger={danger}\r\n                            size=\"large\"\r\n                            style={{ minWidth: '70px', height: '100%' }}\r\n                            type=\"primary\" onClick={() => dispatch({ type, value })} >\r\n                            {!!value ? value : <Icon />}\r\n                        </Button>\r\n                    </Col>\r\n                );\r\n            })\r\n        \r\n    )\r\n}\r\n\r\nexport default function HitPoints({dispatch, state}) {\r\n    return <>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col span={8} >\r\n                    <Statistic\r\n                        style={{ margin : 10}}\r\n                        value={state.inputHitpoints}\r\n                        precision={0}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[8, 8]}>\r\n                <Keyboard dispatch={dispatch} />\r\n            </Row>\r\n        </>\r\n}\r\n","import React from 'react';\r\n\r\nimport { Button, Row, Col, Statistic } from 'antd';\r\n\r\nconst buttonLetters = [\r\n    { value : \"q\", type: \"writeInputName\" },\r\n    { value : \"w\", type: \"writeInputName\" },\r\n    { value : \"e\", type: \"writeInputName\" },\r\n    { value : \"r\", type: \"writeInputName\" },\r\n    { value : \"t\", type: \"writeInputName\" },\r\n    { value : \"y\", type: \"writeInputName\" },\r\n    { value : \"u\", type: \"writeInputName\" },\r\n    { value : \"i\", type: \"writeInputName\" },\r\n    { value : \"o\", type: \"writeInputName\" },\r\n    { value : \"p\", type: \"writeInputName\" },\r\n    { value : \"a\", type: \"writeInputName\" },\r\n    { value : \"s\", type: \"writeInputName\" },\r\n    { value : \"d\", type: \"writeInputName\" },\r\n    { value : \"f\", type: \"writeInputName\" },\r\n    { value : \"g\", type: \"writeInputName\" },\r\n    { value : \"h\", type: \"writeInputName\" },\r\n    { value : \"j\", type: \"writeInputName\" },\r\n    { value : \"k\", type: \"writeInputName\" },\r\n    { value : \"l\", type: \"writeInputName\" },\r\n    { value : \"ñ\", type: \"writeInputName\" },\r\n    { value : \"z\", type: \"writeInputName\" },\r\n    { value : \"x\", type: \"writeInputName\" },\r\n    { value : \"c\", type: \"writeInputName\" },\r\n    { value : \"v\", type: \"writeInputName\" },\r\n    { value : \"b\", type: \"writeInputName\" },\r\n    { value : \"n\", type: \"writeInputName\" },\r\n    { value : \"m\", type: \"writeInputName\" },\r\n    { value : \"_\", type: \"writeInputName\" },\r\n    { value : \"??\", type: \"writeInputName\" },\r\n    { value : \"1\", type: \"writeInputName\" },\r\n    { value : \"2\", type: \"writeInputName\" },\r\n    { value : \"3\", type: \"writeInputName\" },\r\n    { value : \"4\", type: \"writeInputName\" },\r\n    { value : \"5\", type: \"writeInputName\" },\r\n    { value : \"6\", type: \"writeInputName\" },\r\n    { value : \"7\", type: \"writeInputName\" },\r\n    { value : \"8\", type: \"writeInputName\" },\r\n    { value : \"9\", type: \"writeInputName\" },\r\n    { value : \"0\", type: \"writeInputName\" },\r\n];\r\n\r\nfunction Keyboard({dispatch, extraWords}) {\r\n    return (\r\n        buttonLetters.concat(extraWords).map(({ type, value, Icon }) => {\r\n            return (\r\n                <Col key={value}>\r\n                    <Button\r\n                        size=\"large\"\r\n                        style={{ minWidth: '70px', height: '100%' }}\r\n                        type=\"primary\" onClick={() => dispatch({ type, value })} >\r\n                        {!!value ? value : <Icon />}\r\n                    </Button>\r\n                </Col>\r\n            );\r\n        })\r\n    )\r\n}\r\n\r\nexport default function Name({dispatch, state}) {\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    const players_param = urlParams.get('players') ? urlParams.get('players')  : null;\r\n    const players = players_param?.split(\",\")?.map( ply => ({ value : ply, type: \"writeInputName\" })) ?? [];\r\n\r\n    return <>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col span={8} >\r\n                    <Statistic\r\n                        style={{ margin : 10}}\r\n                        value={state.inputName}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={[8, 8]}>\r\n                <Keyboard extraWords={players} dispatch={dispatch} />\r\n            </Row>\r\n        </>\r\n}","import React, {useState} from 'react';\r\n\r\nimport { Button, Steps } from 'antd';\r\n\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nimport Initiative from '../Initiative';\r\nimport HitPoints from '../HitPoints';\r\nimport Name from '../Name';\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n    {\r\n        title: 'Name',\r\n    },\r\n    {\r\n        title: 'Initiative',\r\n    },\r\n    {\r\n        title: 'Hit Points',\r\n    },\r\n];\r\n\r\nexport default function AddCharacter({state, dispatch}) {\r\n    const [current, setCurrent] = useState(0);\r\n    return (\r\n        <>\r\n           <Steps current={current}>\r\n                            {steps.map(item => (\r\n                                <Step key={item.title} title={item.title} />\r\n                            ))}\r\n                        </Steps>\r\n                        {\r\n                            current === 1 && <Initiative state={state} dispatch={dispatch} />\r\n                        }\r\n                        {\r\n                            current === 0 && <Name state={state} dispatch={dispatch} />\r\n                        }\r\n                        {\r\n                            current === 2 && <HitPoints state={state} dispatch={dispatch} />\r\n                        }\r\n                        <div className=\"steps-action\">\r\n                            {\r\n                                current === 0 &&\r\n                                <Button\r\n                                    danger\r\n                                    style={{width: '100px'}}\r\n                                    type=\"primary\" onClick={() => dispatch({ type: 'deleteInputName' })} >\r\n                                    <DeleteOutlined />\r\n                                </Button>\r\n                            }\r\n                            {\r\n                                current === 1 &&\r\n                                <Button\r\n                                    danger\r\n                                    style={{width: '100px'}}\r\n                                    type=\"primary\" onClick={() => dispatch({ type: 'deleteInputInitiative' })} >\r\n                                    <DeleteOutlined />\r\n                                </Button>\r\n                            }\r\n                            {\r\n                                current === 2 &&\r\n                                <Button\r\n                                    danger\r\n                                    style={{width: '100px'}}\r\n                                    type=\"primary\" onClick={() => dispatch({ type: 'deleteInputHitpoints' })} >\r\n                                    <DeleteOutlined />\r\n                                </Button>\r\n                            }\r\n\r\n                            {current > 0 && (\r\n                                <Button onClick={() => setCurrent(current - 1)}>\r\n                                    Previous\r\n                                </Button>\r\n                            )}\r\n                            {current < steps.length - 1 && (\r\n                                <Button type=\"primary\" onClick={() => setCurrent(current + 1)}>\r\n                                    Next\r\n                                </Button>\r\n                            )}\r\n\r\n                            {current === steps.length - 1 && (\r\n                                <Button type=\"primary\" danger onClick={() => { setCurrent(0); dispatch({ type: 'addInitiative', monster: true }) }}>\r\n                                    Done Monster\r\n                                </Button>\r\n                            )}\r\n                            {current === steps.length - 1 && (\r\n                                <Button type=\"primary\" onClick={() => { setCurrent(0); dispatch({ type: 'addInitiative', monster: false }) }}>\r\n                                    Done Player\r\n                                </Button>\r\n                            )}\r\n                        </div> \r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Row, Col, Checkbox, Tag } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nconst buttonsHitpoints = [\r\n    { value: 1, type: 'editHitpoints' },\r\n    { value: 2, type: 'editHitpoints' },\r\n    { value: 3, type: 'editHitpoints' },\r\n    { value: 5, type: 'editHitpoints' },\r\n    { value: 10, type: 'editHitpoints' },\r\n    { value: 20, type: 'editHitpoints' },\r\n    { value: 30, type: 'editHitpoints' },\r\n    { value: 50, type: 'editHitpoints' }\r\n];\r\n\r\nconst buttonsConditions = [\r\n    { color: \"grey\" , condition: \"Petrified\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"lime\" , condition: \"Incapacitated\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"gold\" , condition: \"Unconscious\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"orange\" , condition: \"Paralyzed\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"cornflowerblue\" , condition: \"Invisible\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"cyan\" , condition: \"Deafened\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"geekblue\" , condition: \"Blinded\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"blue\" , condition: \"Frightened\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"purple\" , condition: \"Grappled\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"burlywood\" , condition: \"Restrained\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"magenta\" , condition: \"Charmed\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"green\" , condition: \"Poisoned\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"red\" , condition: \"Stunned\", add: 'editCondition', remove: 'removeCondition' },\r\n    { color: \"volcano\" , condition: \"Prone\", add: 'editCondition', remove: 'removeCondition' },\r\n];\r\n\r\nfunction KeyboardConditions({dispatch, conditions}) {\r\n\r\n    return (\r\n        buttonsConditions.map(({ add, remove, condition, color }) => {\r\n                const hasIt = conditions?.find( cond => cond.condition === condition);\r\n                return (\r\n                    <Col span={6} key={condition}>\r\n                        <Tag\r\n                            key={condition}\r\n                            color={'cornflowerblue'}\r\n                            onClick={ () =>  dispatch({ type: hasIt ? remove : add, value: { condition,  color }  })}\r\n                        >\r\n                           {hasIt && <DeleteOutlined /> } {condition}\r\n                        </Tag>\r\n                    </Col>\r\n                );\r\n            })\r\n        \r\n    )\r\n}\r\n\r\n\r\nfunction KeyboardHitpoints({dispatch, isNegative}) {\r\n    return (\r\n        \r\n        buttonsHitpoints.map(({ type, value, Icon }) => {\r\n                if(!type) return <Col span={8} key={\"vacio\"} />;\r\n                return (\r\n                    <Col span={8} key={value}>\r\n                        <Button\r\n                            size=\"large\"\r\n                            style={{ minWidth: '70px', height: '100%' }}\r\n                            type=\"primary\" onClick={() => dispatch({ type, value: isNegative ? -value: value })} >\r\n                            {isNegative && \"- \"}{!!value ? value : <Icon />}\r\n                        </Button>\r\n                    </Col>\r\n                );\r\n            })\r\n        \r\n    )\r\n}\r\n\r\nexport default function HitPointsConditionsManager({dispatch, state}) {\r\n    const [checked, onChange] = useState(true);\r\n    const { conditions, name } = state?.initiatives?.find( ini => ini.id === state.selected) ?? {};\r\n    return <>\r\n            <div className=\"LabelName\"><span className=\"Name\">{name}</span></div>\r\n            <div className=\"LabelName\">Hit Points:</div>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col>\r\n                    <Row gutter={[8, 8]}>\r\n                        <Col span={8} ><Checkbox checked={checked} onChange={({target : {checked: value}}) => onChange(value)}>Minus</Checkbox></Col>\r\n                        <KeyboardHitpoints dispatch={dispatch} isNegative={checked} />\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            <div className=\"LabelName\">Conditions:</div>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n                <Col>\r\n                    <Row gutter={[8, 8]}>\r\n                        <KeyboardConditions dispatch={dispatch} conditions={conditions} />\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n}\r\n","import React, { useEffect, useReducer, useState } from 'react';\r\nimport { Row, Col, Tabs } from 'antd';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport CharactersList from './CharactersList';\r\nimport AddCharacter from './AddCharacter';\r\nimport HitPointsConditionsManager from './HitPointsConditionsManager';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst initialState = { initiatives: [], selected: null, inputInitiative: 0, inputName: '', inputHitpoints: 0 };\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'addInitiative': {\r\n            const initiative = {\r\n                value: state.inputInitiative ?? 0,\r\n                name: state.inputName ?? '',\r\n                hitpoints: state.inputHitpoints,\r\n                id: Date.now(),\r\n                monster: action.monster,\r\n                conditions: []\r\n            };\r\n            const initiatives = [...state.initiatives, initiative].sort((a, b) => b.value - a.value);\r\n            return { ...state, initiatives, inputInitiative: 0, inputName: '', inputHitpoints: 0 };\r\n        }\r\n        case 'sortInitiatives': {\r\n            return { ...state, initiatives: action.initiatives };\r\n        }\r\n        case 'removeInitiative': {\r\n            const initiatives = state.initiatives.filter(({ id }) => id !== action.value);\r\n\r\n            return { ...state, initiatives, selected: state.selected === action.value ? null : state.selected};\r\n        }\r\n        case 'writeInputInitiative': {\r\n            const inputInitiative = parseInt(state.inputInitiative + action.value);\r\n            return { ...state, inputInitiative };\r\n        }\r\n        case 'writeInputName': {\r\n            const inputName = state.inputName + action.value;\r\n            return { ...state, inputName };\r\n        }\r\n        case 'writeInputHitpoints': {\r\n            const inputHitpoints = parseInt(state.inputHitpoints + action.value);\r\n            return { ...state, inputHitpoints };\r\n        }\r\n        case 'deleteInputInitiative': {\r\n            return { ...state, inputInitiative: 0 };\r\n        }\r\n        case 'deleteInputHitpoints': {\r\n            return { ...state, inputHitpoints: 0 };\r\n        }\r\n        case 'deleteInputName': {\r\n            return { ...state, inputName: '' };\r\n        }\r\n        case 'negativeInputInitiative': {\r\n            return { ...state, inputInitiative: -state.inputInitiative };\r\n        }\r\n        case 'next': {\r\n            return { \r\n                ...state,\r\n                initiatives: state.initiatives.slice(1).concat(state.initiatives.slice(0, 1))\r\n            };\r\n        }\r\n        case 'back': {\r\n            return {\r\n                ...state,\r\n                initiatives: state.initiatives.slice(-1).concat(state.initiatives.slice(0, -1))\r\n            };\r\n        }\r\n        case 'select': {\r\n            return { ...state, selected: action.value };\r\n        }\r\n        case 'editHitpoints': {\r\n            const initiatives = state.initiatives.map(ini => {\r\n                if (ini.id === state.selected) {\r\n                    const copy = cloneDeep(ini);\r\n                    copy.hitpoints = copy.hitpoints + action.value;\r\n                    return copy;\r\n                }\r\n                return ini;\r\n            })\r\n            return { ...state, initiatives };\r\n        }\r\n        case 'editCondition': {\r\n            const initiatives = state.initiatives.map(ini => {\r\n                if (ini.id === state.selected) {\r\n                    const copy = cloneDeep(ini);\r\n                    copy.conditions.push(action.value);\r\n                    return copy;\r\n                }\r\n                return ini;\r\n            })\r\n            return { ...state, initiatives };\r\n        }\r\n        case 'removeCondition': {\r\n            const initiatives = state.initiatives.map(ini => {\r\n                if (ini.id === state.selected) {\r\n                    const copy = cloneDeep(ini);\r\n                    copy.conditions = copy.conditions.filter( cond => cond.condition !== action.value.condition);\r\n                    return copy;\r\n                }\r\n                return ini;\r\n            })\r\n            return { ...state, initiatives };\r\n        }\r\n        case 'clean': {\r\n            return { ...state, inputInitiative: 0, inputName: '', inputHitpoints: 0, selected: null };\r\n        }\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\n\r\nexport default function App() {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    const [activeTab, setTab] = useState(\"2\");\r\n\r\n    useEffect(() => {\r\n        if(!state.selected){\r\n            setTab(\"2\");\r\n        } else {\r\n            setTab(\"1\");\r\n        }\r\n    }, [state.selected]);\r\n\r\n    return (\r\n        <Row gutter={[16, 16]} style={{ width: \"100%\", height: \"100%\" }}>\r\n            <Col span={activeTab === \"2\" ? 8 : 12} >\r\n                <CharactersList state={state} dispatch={dispatch} wider={activeTab === \"1\"} />\r\n            </Col>\r\n            <Col  span={activeTab === \"2\" ? 16 : 12} >\r\n                <Tabs onChange={setTab} activeKey={activeTab}>\r\n                    <TabPane tab=\"Add Character\" key=\"2\">\r\n                        <AddCharacter state={state} dispatch={dispatch} />\r\n                    </TabPane>\r\n                    <TabPane disabled={!state.selected} tab=\"Character Manager\" key=\"1\">\r\n                        <HitPointsConditionsManager state={state} dispatch={dispatch} />\r\n                    </TabPane>\r\n                </Tabs>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './App';\n\nimport './App.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}