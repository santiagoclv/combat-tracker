{"version":3,"sources":["App.js","registerServiceWorker.js","index.js"],"names":["buttons","value","type","Icon","LineOutlined","EnterOutlined","initialState","initiatives","inputInitiative","reducer","state","action","sort","a","b","filter","parseInt","slice","concat","Error","App","useReducer","dispatch","gutter","span","size","style","minWidth","height","disabled","length","onClick","itemLayout","dataSource","renderItem","item","Item","Meta","avatar","src","title","href","precision","prefix","DingtalkOutlined","DeleteOutlined","map","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.49e6986a.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\r\nimport { DeleteOutlined, EnterOutlined, DingtalkOutlined, LineOutlined } from '@ant-design/icons';\r\nimport { Button, Row, Col, Statistic, List, Avatar } from 'antd';\r\n\r\nconst buttons = [\r\n    { value: \"1\", type: 'writeInputInitiative' },\r\n    { value: \"2\", type: 'writeInputInitiative' },\r\n    { value: \"3\", type: 'writeInputInitiative' },\r\n    { value: \"4\", type: 'writeInputInitiative' },\r\n    { value: \"5\", type: 'writeInputInitiative' },\r\n    { value: \"6\", type: 'writeInputInitiative' },\r\n    { value: \"7\", type: 'writeInputInitiative' },\r\n    { value: \"8\", type: 'writeInputInitiative' },\r\n    { value: \"9\", type: 'writeInputInitiative' },\r\n    { Icon: LineOutlined, type: 'negativeInputInitiative' },\r\n    { value: \"0\", type: 'writeInputInitiative' },\r\n    { Icon: EnterOutlined, type: 'addInitiative' },\r\n];\r\n\r\nconst initialState = { initiatives: [], inputInitiative: 0 };\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'addInitiative': {\r\n            const initiatives = [...state.initiatives, state.inputInitiative].sort((a, b) => b - a);\r\n            return { ...state, initiatives, inputInitiative: 0 };\r\n        }\r\n        case 'removeInitiative': {\r\n            const initiatives = state.initiatives.filter(value => value !== action.value);\r\n            return { ...state, initiatives };\r\n        }\r\n        case 'writeInputInitiative': {\r\n            const inputInitiative = parseInt(state.inputInitiative + action.value);\r\n            return { ...state, inputInitiative };\r\n        }\r\n        case 'deleteInputInitiative': {\r\n            return { ...state, inputInitiative: 0 };\r\n        }\r\n        case 'negativeInputInitiative': {\r\n            return { ...state, inputInitiative: -state.inputInitiative };\r\n        }\r\n        case 'next': {\r\n            return { ...state, initiatives: state.initiatives.slice(1).concat(state.initiatives[0]) };\r\n        }\r\n        case 'back': {\r\n            return { ...state, initiatives: state.initiatives.slice(-1).concat(state.initiatives.slice(0, -1)) };\r\n        }\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\n\r\nexport default function App() {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n\r\n    return (\r\n        <Row gutter={[16, 16]}>\r\n            <Col span={12} >\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Button\r\n                            size=\"large\"\r\n                            style={{ minWidth: '150px', height: '100%' }}\r\n                            type=\"primary\"\r\n                            disabled={state.initiatives.length < 2}\r\n                            onClick={() => dispatch({ type: \"back\" })} >\r\n                            Back\r\n                        </Button>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Button\r\n                            size=\"large\"\r\n                            style={{ minWidth: '150px', height: '100%' }}\r\n                            type=\"primary\"\r\n                            disabled={state.initiatives.length < 2}\r\n                            onClick={() => dispatch({ type: \"next\" })} >\r\n                            Next\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <List\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={state.initiatives}\r\n                    renderItem={item => (\r\n                        <List.Item key={item}>\r\n                            <List.Item.Meta\r\n                                avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                                title={<a href=\"https://ant.design\">{item}</a>}\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </Col>\r\n            <Col span={12} >\r\n                <Row gutter={[16, 16]}>\r\n                    <Col span={8} >\r\n                        <Statistic\r\n                            title=\"Initiative\"\r\n                            value={state.inputInitiative}\r\n                            precision={0}\r\n                            prefix={<DingtalkOutlined />}\r\n                        />\r\n                    </Col>\r\n                    <Col span={8} >\r\n                        <Button\r\n                            size=\"large\"\r\n                            style={{ minWidth: '150px' }}\r\n                            type=\"primary\" onClick={() => dispatch({ type: 'deleteInputInitiative' })} >\r\n                            <DeleteOutlined />\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={[16, 16]}>\r\n                    {\r\n                        buttons.map(({ type, value, Icon }) => {\r\n                            return (\r\n                                <Col span={8} key={value}>\r\n                                    <Button\r\n                                        size=\"large\"\r\n                                        style={{ minWidth: '150px', height: '100%' }}\r\n                                        type=\"primary\" onClick={() => dispatch({ type, value })} >\r\n                                        {!!value ? value : <Icon />}\r\n                                    </Button>\r\n                                </Col>\r\n                            );\r\n                        })\r\n                    }\r\n\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nregisterServiceWorker();"],"sourceRoot":""}